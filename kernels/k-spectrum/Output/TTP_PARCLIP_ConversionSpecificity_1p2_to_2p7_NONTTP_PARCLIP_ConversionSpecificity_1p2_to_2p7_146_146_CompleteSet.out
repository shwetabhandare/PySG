9
=== Three UTR, k-mer  length: 5 ===

<SparseDataSet instance>
number of patterns: 292

training ***********************************************************
Cpos, Cneg:  0.5 0.5
*
optimization finished, #iter = 117
nu = 1.000000
obj = -82.241282, rho = 0.442337
nSV = 234, nBSV = 234
testing ***********************************************************
training ***********************************************************
Cpos, Cneg:  0.5 0.5
*
optimization finished, #iter = 117
nu = 1.000000
obj = -81.958426, rho = 0.451181
nSV = 234, nBSV = 234
testing ***********************************************************
training ***********************************************************
Cpos, Cneg:  0.5 0.5
*
optimization finished, #iter = 117
nu = 1.000000
obj = -82.916854, rho = 0.316065
nSV = 234, nBSV = 234
testing ***********************************************************
training ***********************************************************
Cpos, Cneg:  0.5 0.5
*
optimization finished, #iter = 117
nu = 1.000000
obj = -82.320177, rho = 0.463204
nSV = 234, nBSV = 234
testing ***********************************************************
training ***********************************************************
Cpos, Cneg:  0.5 0.5
*
optimization finished, #iter = 118
nu = 0.999431
obj = -80.590684, rho = 0.488471
nSV = 232, nBSV = 228
testing ***********************************************************
Success Rate:  0.908.
Balanced Success Rate:  0.908.
Sensitivity:  0.871.
PPV:  0.941.
ROC:  0.972.
Results Log: 
[trainingTime 0.03
numSV 234
testingTime 0.0, trainingTime 0.03
numSV 234
testingTime 0.01, trainingTime 0.05
numSV 234
testingTime 0.01, trainingTime 0.03
numSV 234
testingTime 0.0, trainingTime 0.03
numSV 232
testingTime 0.0]
Predicted class length: 5, Given Class Length: 5
Incorrectly predicted labels: 
[[264, 174, 13, 60, 68, 9, 66], [117, 124, 132, 72], [234, 24, 119], [155, 192, 18], [228, 276, 271, 74, 87, 56, 64, 70, 4, 47]]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -92.275400
nSV = 273
eliminating: [5564, 2201, 10843, 3826, 12840, 272, 12879, 10863, 2695, 3814, 12911, 3782, 12946, 10770, 10753, 1656, 5610, 3899, 8299, 12490, 8406, 4165, 9098, 324, 10955, 1456, 4084, 309, 5420, 5447, 3957, 6614, 6605, 12553, 2246, 8214, 5620, 10510, 13142, 5783, 13153, 9295, 13190, 10515, 10485, 8111, 1156, 5851, 9342, 6398, 1150, 13255, 1188, 2768, 3515, 8206, 12983, 5642, 13021, 10658, 3620, 6467, 10638, 3560, 13082, 1507, 10546, 10526, 13120, 207, 925, 6712, 1843, 1323, 2397, 12078, 11607, 4880, 6913, 1786, 4537, 11489, 2515, 8573, 4465, 8902, 4457, 12142, 5007, 8809, 4830, 11912, 2457, 8765, 11965, 11862, 4742, 483, 11766, 2415, 12039, 1746, 12046, 6976, 11692, 2417, 5336, 7269, 7281, 4248, 375, 5228, 1698, 4245, 12426, 4269, 1249, 2273, 12445, 358, 5324, 12448, 11119, 8438, 7278, 389, 4313, 8980, 2328, 422, 6783, 1274, 5149, 4280, 5156, 6759, 12362, 12363, 403, 400, 399, 1716, 8096, 11894, 3256, 6197, 10234, 9395, 5973, 6348, 1132, 3070, 13698, 1052, 9479, 9944, 9574, 9509, 6117, 1941, 975, 6377, 7725, 3334, 9836, 3147, 3325, 2824, 1575, 13857, 7956, 6127, 9635, 6126, 3106, 8026, 3342, 13669, 2818, 3266, 1, 2850, 1991, 2960, 10367, 13594, 14015, 9469, 10256, 2978, 13986, 10039, 1062, 2992, 5989, 3260, 13403, 7727, 7865, 7819, 13573, 13980, 9475, 5166, 8433, 8166, 4399, 4713, 41, 8298, 7939, 3640, 12170, 8124, 10156, 6510, 12787, 9716, 4857, 548, 1256, 3114, 2915, 9168, 7610, 13895, 9470, 6196, 1990, 7396, 12230, 8776, 5980, 6357, 15, 13683, 8405, 4739, 6715, 5621, 1837, 8215, 13279, 793, 4159, 2597, 9232, 2058, 6883, 9144, 8385, 2150, 5949, 9316, 12199, 2141, 1842, 4861, 1317, 6328, 13335, 268, 13276, 4164, 2241, 2816, 12978, 8022, 7401, 5721, 12951, 1655, 6047, 930, 4458, 820, 6628, 182, 6320, 3820, 5103, 842, 7793, 10561, 5847, 9106, 1171, 13341, 2882, 8158, 6555, 3393, 482, 8884, 7814, 5707, 37, 7923, 2135, 7517, 7918, 803, 12373, 5350, 7264, 555, 6133, 9015, 4012, 6359, 4249, 8526, 5012, 5634, 402, 6470, 2455, 12446, 12947, 11967, 2868, 3956, 7782, 9661, 12844, 3829, 4710, 3437, 10925, 395, 9049, 4916, 8629, 13053, 8245, 5842, 5599, 13901, 12956, 11982, 9023, 10028, 3499, 4598, 9726, 8820, 11999, 5838, 8774, 10984, 2178, 663, 10614, 5532, 7376, 12856, 9935, 5492, 12123, 9074, 7497, 816, 2754, 13158, 1957, 12416, 6710, 7807, 7016, 8108, 4327, 1808, 9012, 4822, 684, 9209, 9845, 13538, 2965, 4984, 3547, 1353, 10043, 1226, 3132, 10202, 11969, 2490, 8054, 10498, 1271, 12099, 11960, 525, 767, 5604, 3295, 6224, 6538, 11051, 6477, 12321, 8374, 7331, 6619, 1220, 5839, 10042, 3406, 5967, 8769, 8392, 11108, 812, 3040, 979, 8373, 6583, 3389, 13562, 10920, 2842, 11998, 7252, 3838, 3387, 2271, 397, 4911, 11771, 12470, 9064, 13278, 4227, 9471, 10613, 3900, 7806, 1659, 502, 8563, 12501, 5068, 5897, 493, 5711, 3370, 4675, 6213, 9545, 10801, 3619, 3259, 7892, 12382, 8479, 5167, 9038, 10672, 3825, 10157, 4565, 6371, 1030, 5845, 5607, 6536, 13528, 9621, 11145, 1939, 9847, 7445, 10477, 4879, 11467, 6843, 9112, 3955, 1992, 5468, 11727, 10373, 6065, 1681, 5932, 6018, 7929, 3226, 11944, 2360, 7293, 1652, 8626, 8189, 10525, 8136, 9738, 8358, 304, 625, 1312, 1854, 1109, 11899, 1632, 1260, 9031, 3237, 1090, 7367, 5161, 3126, 2139, 31, 6847, 9085, 2134, 8246, 11257, 5981, 645, 6906, 1040, 1796, 11073, 8771, 5377, 8728, 3424, 7454, 3211, 12975, 2779, 13327, 349, 7622, 2858, 12473, 11642, 12761, 8975, 739, 4250, 8420, 9397, 6349, 895, 12646, 4974, 1381, 6132, 5354, 4198, 5143, 3270, 12945, 13937, 12447, 11573, 2772, 7203, 7274, 1184, 8710, 9516, 5526, 7589, 2487, 1929, 3160, 5395, 6669, 4345, 6330, 5342, 10598, 10965, 5659, 7145, 10254, 784, 210, 2456, 487, 5047, 7946, 11326, 4597, 3501, 4453, 4601, 4758, 6713, 1161, 437, 8133, 8061, 5164, 1845, 3504, 12102, 1481, 9272, 6476, 6316, 6480, 8734, 11861, 4347, 7456, 3864, 8778, 2595, 9829, 11475, 474, 413, 11516, 13200, 8408, 12195, 9916, 13425, 1964, 11658, 8236, 3202, 1252, 11873, 8400, 4444, 3717, 2470, 7705, 957, 7718, 1620, 4981, 4201, 6638, 5762, 6131, 9341, 13539, 1130, 3595, 11870, 8240, 11868, 13475, 1581, 4684, 3214, 8515, 6569, 3292, 10957, 13697, 6312, 6386, 7840, 2660, 9515, 4806, 8898, 2017, 12013, 10888, 10911, 5454, 4925, 4247, 5722, 10675, 8297, 600, 11991, 5785, 12279, 3493, 3817, 2203, 11651, 2142, 6970, 5909, 7457, 2034, 3385, 1755, 10205, 12074, 1749, 5850, 376, 1178, 3724, 2200, 6484, 8845, 7287, 4113, 7689, 116, 11867, 5718, 560, 7947, 8242, 13679, 4398, 5469, 6020, 2122, 2363, 7928, 3321, 10838, 10041, 3378, 8198, 13616, 11136, 8924, 887, 5773, 13703, 5032, 3125, 12209, 7555, 9744, 601, 1522, 944, 3240, 8790, 10806, 293, 10175, 2204, 6208, 9549, 4182, 1355, 6716, 13767, 8132, 9003, 8170, 8431, 2997, 2412, 736, 38, 10679, 9664, 467, 4300, 12037, 13028, 10240, 13437, 6384, 8176, 9891, 4207, 798, 4707, 11880, 523, 4888, 1923, 12468, 5864, 11401, 1435, 1806, 664, 2023, 3658, 12533, 7592, 405, 5894, 8497, 4486, 3725, 11518, 2594, 2775, 2848, 6038, 10495, 12965, 10946, 6905, 3232, 10901, 4843, 11883, 1419, 8662, 8705, 1844, 3326, 3756, 10030, 8654, 13614, 13471, 12332, 7004, 7663, 4914, 8588, 7532, 3323, 8530, 8123, 12276, 7842, 8117, 4862, 10321, 5786, 5098, 10210, 9654, 13389, 13565, 10037, 13141, 13554, 7402, 1175, 8775, 2199, 1756, 266, 6298, 11827, 1255, 12959, 13806, 10768, 322, 7006, 5148, 826, 9719, 11547, 5100, 10766, 12781, 9917, 7050, 2043, 4971, 13303, 9493, 8110, 12110, 7820, 4318, 7794, 935, 430, 12185, 5515, 8269, 4809, 259, 6321, 4223, 9640, 9141, 741, 5119, 5390, 11230, 6194, 1037, 2804, 2510, 1168, 13350, 624, 12541, 13291, 3525, 10246, 9476, 7862, 11777, 2331, 1467, 11451, 12878, 5154, 4076, 7430, 6293, 13894, 10697, 2432, 11964, 10652, 9428, 12577, 8352, 13342, 11575, 1100, 12160, 8829, 10493, 8982, 2883, 2116, 13791, 3172, 10583, 5708, 5733, 6052, 5480, 12049, 3071, 10443, 13144, 13392, 9922, 1214, 1204, 13132, 11720, 5922, 7747, 9941, 11639, 2542, 1680, 12062, 1210, 11637, 12410, 12413, 8199, 13306, 13468, 3225, 7223, 2385, 7562, 4715, 1071, 12377, 1852, 8995, 9288, 12222, 2153, 6704, 10174, 2964, 327, 3770, 5036, 1747, 3268, 6088, 9193, 7175, 4193, 5021, 5345, 4994, 355, 1261, 5142, 12010, 1318, 607, 1841, 4667, 5394, 9713, 8815, 311, 7452, 6264, 2511, 10665, 12067, 3024, 1203, 13293, 4670, 838, 11606, 2381, 3360, 3567, 7940, 387, 6824, 4163, 6116, 7780, 8023, 3551, 10255, 155, 3517, 2242, 204, 8631, 12979, 6859, 5617, 7165, 10964, 5010, 3927, 3066, 4217, 10474, 10452, 7639, 5306, 2442, 11419, 659, 11430, 4679, 538, 12478, 466, 9675, 2651, 7288, 13440, 10235, 13318, 6420, 1928, 3513, 2589, 12386, 5116, 12315, 392, 9848, 6189, 5070, 10981, 8807, 2077, 4787, 7173, 11006, 13737, 1060, 1639, 6823, 11382, 7527, 3643, 0, 13653, 13115, 9971, 11211, 642, 11273, 5009, 6376, 4757, 507, 11007, 5362, 2480, 1096, 11446, 373, 7968, 880, 4706, 7943, 7474, 11486, 6322, 3972, 8750, 6124, 1688, 3840, 2070, 11602, 7549, 4502, 12396, 547, 2690, 4500, 6507, 1494, 1491, 4997, 744, 3265, 4996, 1285, 9087, 12551, 2136, 9929, 5126, 6061, 3902, 6632, 5159, 4492, 7080, 2405, 7901, 6280, 13081, 5402, 668, 5406, 5977, 5551, 12301, 5549, 6279, 7144, 3113, 5258, 8554, 3819, 3557, 8797, 11684, 11440, 5376, 9067, 4548, 9036, 6387, 9511, 2019, 2306, 10086, 5338, 5725, 6816, 11834, 7985, 920, 3442, 5937, 5464, 893, 2082, 86, 6562, 14030, 3747, 7719, 3707, 10983, 8128, 8992, 1313, 3965, 12727, 6151, 13110, 9536, 10522, 1637, 11588, 10639, 2018, 3146, 9173, 10784, 6385, 8264, 932, 7792, 6462, 28, 3535, 8427, 5996, 12620, 2605, 10947, 11125, 9204, 7209, 2774, 9240, 6311, 10694, 4171, 325, 2068, 13494, 3374, 4600, 1059, 8648, 12387, 7802, 13910, 6103, 8591, 5727, 11192, 864, 11652, 12868, 3021, 12775, 11387, 2041, 5485, 2056, 7934, 6097, 8143, 6804, 6053, 12342, 12056, 5335, 7729, 11764, 11469, 2847, 8731, 1095, 9556, 8810, 6479, 7450, 10511, 3810, 12466, 10733, 5385, 4466, 1828, 13953, 11311, 609, 5182, 3365, 4668, 10440, 4157, 3565, 2981, 3737, 8723, 2592, 12316, 3042, 3711, 7553, 4714, 3752, 5514, 1025, 4851, 4807, 8670, 255, 11734, 12356, 8876, 11494, 8508, 11994, 10264, 10113, 13524, 8126, 12273, 4206, 4592, 1693, 13286, 4029, 2103, 2267, 1411, 3596, 8638, 3454, 12320, 8274, 1593, 6546, 7699, 12291, 7855, 2532, 12892, 386, 4004, 8725, 2484, 3102, 12957, 4693, 3740, 3938, 4086, 8695, 12997, 3171, 3978, 12207, 3743, 6952, 10962, 5917, 10473, 11276, 1172, 10624, 1259, 8905, 11148, 9196, 794, 9426, 5388, 4901, 6668, 6270, 7667, 9708, 5183, 6876, 540, 11272, 5071, 2235, 1301, 6383, 9129, 12081, 3529, 11473, 6120, 7441, 3923, 4270, 7914, 11312, 9495, 10919, 2773, 7078, 10656, 9777, 7883, 11076, 12948, 10701, 4325, 12065, 6810, 4955, 13398, 4762, 5179, 6057, 6188, 9464, 1186, 6182, 11448, 8766, 7273, 3924, 6934, 2314, 10898, 7047, 13689, 5482, 4236, 7977, 1650, 5966]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -93.003277
nSV = 270
eliminating: [9038, 4420, 4892, 2183, 10629, 867, 5292, 12064, 1752, 9286, 6719, 6984, 3850, 6094, 7351, 9017, 1159, 6597, 3369, 10958, 1877, 1006, 7456, 9024, 2678, 12081, 4443, 2746, 5138, 5874, 5453, 8022, 5478, 1446, 3486, 5417, 5400, 10645, 12429, 8037, 9107, 532, 11347, 1961, 1221, 3247, 11842, 8209, 2814, 11767, 11090, 4919, 1721, 1655, 8635, 7595, 3547, 11193, 590, 4002, 8492, 9693, 5229, 9759, 10079, 10083, 5338, 11653, 7222, 2318, 7766, 9099, 1236, 3979, 5540, 5834, 4767, 11042, 4487, 2825, 417, 7579, 4924, 10027, 6777, 3321, 2743, 10485, 7522, 4839, 4470, 8274, 10242, 1714, 10330, 5572, 12074, 6104, 4358, 8032, 4251, 6714, 10721, 6066, 4175, 8682, 740, 5393, 5660, 10806, 1617, 7958, 3530, 12378, 7970, 8703, 949, 86, 4337, 7020, 11785, 10111, 8462, 1001, 12273, 566, 190, 7136, 10232, 11169, 3260, 198, 2745, 7575, 10407, 11312, 2556, 9919, 8618, 5254, 1086, 4993, 8471, 8093, 5256, 869, 1782, 4531, 1786, 9950, 9288, 2895, 8310, 24, 9948, 5316, 6279, 11917, 3945, 3669, 1494, 6206, 6258, 9197, 1519, 798, 8144, 944, 4444, 2397, 1192, 4631, 11762, 1116, 5412, 4332, 7460, 3632, 6940, 5830, 8279, 1455, 6029, 3977, 5193, 4632, 11761, 9100, 10941, 10214, 11258, 7123, 10860, 3950, 3246, 3073, 2688, 12165, 5875, 3678, 3784, 4763, 12079, 6600, 5471, 6889, 8521, 11158, 3635, 3679, 11161, 3985, 7562, 5943, 3636, 1527, 3628, 988, 10765, 2535, 8690, 8295, 9863, 4801, 4808, 7057, 7365, 8557, 4959, 1307, 252, 6373, 10317, 2211, 6754, 1722, 2185, 9800, 11988, 975, 3357, 7283, 1167, 7465, 6471, 8779, 11069, 1387, 8025, 12359, 1107, 2506, 11657, 5573, 8640, 960, 11983, 9864, 7577, 9871, 4960, 2073, 8273, 7364, 2975, 8448, 1377, 4813, 6553, 9892, 2339, 4270, 9770, 5311, 5563, 5120, 3853, 8967, 8229, 8235, 8970, 12017, 5431, 3063, 3715, 5482, 9581, 11678, 6951, 356, 1043, 622, 8727, 8201, 8200, 11665, 7118, 4450, 11267, 6669, 5901, 5001, 11426, 2091, 7715, 8637, 2471, 7609, 8173, 2818, 8844, 9575, 11962, 2176, 3964, 305, 963, 8244, 12144, 4082, 4081, 5666, 8017, 7189, 7220, 8792, 3525, 10503, 7819, 641, 4464, 7767, 186, 5675, 9735, 4150, 2797, 6486, 6652, 8225, 8224, 8245, 11360, 4338, 10929, 2529, 6236, 7942, 11488, 5916, 1880, 11754, 7840, 5813, 12209, 11597, 4326, 603, 4097, 7693, 3408, 1645, 4207, 2631, 11419, 7716, 11104, 10915, 7977, 3414, 802, 6895, 12121, 10952, 11421, 7714, 5145, 4606, 7649, 12425, 5409, 5278, 6069, 5864, 7347, 12119, 7402, 4103, 7370, 6239, 3759, 2642, 9603, 11592, 1613, 2531, 1206, 6299, 2269, 4148, 2968, 10497, 12416, 1106, 9169, 1270, 7026, 2500, 11640, 4091, 3722, 6526, 6113, 3616, 5221, 10840, 10279, 1308, 12036, 8125, 8529, 4356, 7066, 2332, 7000, 4060, 11020, 10647, 10456, 476, 11782, 2600, 474, 8069, 11726, 9415, 7985, 8124, 4182, 1799, 5670, 6015, 8530, 2982, 11201, 11148, 11179, 4391, 11358, 1618, 11476, 8528, 5578, 11180, 2542, 8875, 10457, 3980, 3568, 4999, 7028, 7983, 1918, 7451, 2757, 8238, 1312, 4476, 9447, 7287, 4612, 11693, 1162, 3533, 11381, 951, 10771, 10763, 9943, 6749, 11795, 10717, 7497, 4674, 3118, 6844, 7463, 12348, 533, 7851, 5887, 4893, 9134, 6821, 9972, 11972, 2195, 12133, 11654, 1991, 2779, 7160, 9303, 10291, 8843, 5766, 5512, 9617, 1002, 5505, 9416, 4006, 9921, 8011, 7162, 6973, 7633, 1486, 4866, 12531, 10002, 3210, 8172, 9573, 10416, 5008, 3746, 4586, 12375, 11416, 1468, 7247, 5762, 7107, 3322, 4205, 4067, 10486, 8085, 9530, 8028, 958, 10833, 784, 5196, 3005, 6590, 5656, 3026, 3747, 7462, 11696, 11121, 9085, 11096, 721, 5100, 3312, 10962, 8641, 10803, 12614, 2161, 0, 10675, 9822, 10028, 7326, 194, 11752, 5506, 10815, 3791, 3412, 3033, 801, 8999, 14, 1844, 3367, 5153, 2643, 3783, 5785, 7513, 3984, 10957, 5441, 717, 9768, 12530, 9912, 8376, 3526, 3146, 12156, 6646, 8027, 3048, 10186, 195, 10289, 2782, 7317, 11093, 10725, 12024, 6492, 11165, 4388, 11200, 9528, 5211, 10563, 9614, 4066, 11982, 5390, 8842, 9734, 8791, 10888, 7771, 588, 6487, 2547, 11632, 5327, 11510, 6374, 2662, 8632, 5511, 5825, 5157, 485, 2533, 3024, 11483, 6237, 8694, 3975, 8255, 10718, 5322, 2042, 11244, 9776, 1074, 4320, 3726, 8464, 3334, 8821, 360, 7025, 4746, 3176, 1309, 10973, 2499, 7865, 11803, 12193, 1890, 718, 12301, 12591, 6975, 3875, 7956, 12377, 1610, 10415, 4549, 4561, 4603, 4327, 6030, 9557, 8338, 4276, 11594, 236, 83, 3006, 169, 1487, 4869, 5439, 10008, 12300, 12018, 5889, 3664, 11070, 1075, 5972, 737, 4973, 297, 791, 5646, 3971, 1967, 5658, 11098, 1451, 6885, 3787, 8031, 2716, 7679, 5886, 10641, 11245, 7698, 8094, 11599, 6523, 1009, 6647, 2472, 315, 12543, 6370, 8747, 7276, 10402, 10290, 12415, 1409, 12283, 2969, 12312, 683, 7578, 6000, 10591, 5577, 9907, 10654, 591, 10824, 10231, 3765, 6615, 4065, 1510, 11167, 983, 1301, 4187, 10744, 3396, 6489, 601, 9404, 9527, 2163, 7035, 9738, 8207, 11710, 7154, 2553, 10955, 8612, 3968, 9101, 2526, 175, 4488, 4610, 3116, 6217, 5034, 12557, 529, 8554, 852, 1629, 81, 7281, 661, 4179, 5531, 3411, 4566, 9790, 8097, 5432, 12180, 3862, 3077, 7120, 2058, 2057, 11734, 4340, 4640, 2120, 9250, 9939, 10418, 7639, 12522, 10887, 9386, 2193, 2494, 10504, 2272, 2351, 5574, 6855, 2545, 3038, 1715, 10129, 5829, 8105, 1908, 11138, 11203, 9788, 4602, 1640, 4099, 5923, 9561, 8676, 9426, 11147, 1995, 4379, 10671, 10831, 2812, 4860, 1149, 2153, 5761, 12540, 7770, 7029, 9440, 7699, 6007, 2816, 3823, 12541, 8801, 2811, 8048, 10388, 4389, 980, 11724, 9391, 1987, 920, 8846, 5374, 10530, 11124, 3002, 6591, 10916, 2630, 7980, 7461, 7379, 793, 5821, 10420, 10659, 8447, 5676, 4489, 2477, 6607, 9307, 11649, 8275, 11187, 4149, 10052, 8169, 2, 8611, 2637, 9089, 8883, 9723, 7306, 6182, 4848, 1081, 12026, 9, 6064, 4698, 4665, 9966, 7126, 9671, 2999, 3538, 10305, 6248, 3917, 5508, 8046, 3718, 8082, 10566, 6005, 1008, 5213, 5683, 3824, 2270, 9928, 966, 12157, 10568, 3572, 1800, 10053, 10284, 2603, 8026, 1311, 5049, 4152, 11092, 9616, 8491, 11783, 2936, 2981, 3137, 6736, 11948, 4258, 10826, 4845, 6061, 4878, 4419, 2220, 11251, 5341, 1067, 12437, 11071, 11618, 10443, 5880, 11423, 7372, 11015, 12168, 9049, 4448, 4104, 6878, 7713, 12443, 1194, 10361, 8283, 10865, 4664, 5430, 9435, 825, 4701, 12029, 7330, 11117, 6079, 2919, 9201, 6817, 2122, 3774, 5200, 2112, 746, 6894, 796, 6901, 9649, 659, 6893, 4447, 6748, 4234, 3629, 6466, 1552, 950, 3368, 89, 3529, 8544, 4007, 7664, 4295, 1190, 8183, 3744, 9787, 5975, 8606, 339, 3309, 4339, 7720, 936, 2914, 9153, 9937, 1964, 9249, 7512, 4416, 9961, 7121, 12181, 6068, 3076, 1716, 10674, 8013, 3140, 12501, 4545, 1774, 10293, 1847, 2117, 1623, 4281, 10413, 743, 10310, 12322, 3211, 9766, 12299, 9720, 2157, 7696, 6240, 274, 12110, 9583, 5580, 3175, 7786, 2213, 1592, 9543, 10565, 2252, 3569, 8527, 6408, 4748, 9978, 3266, 2939, 11559, 4847, 4127, 3114, 2287, 11230, 2732, 6171, 2852, 3854, 3554, 3884, 6913, 6918, 1746, 6990, 7545, 2865, 64, 4697, 10882, 12480, 4853, 10030, 2616, 10984, 3695, 11614, 10035, 6694, 10326, 890, 12354, 11902, 10619, 1288, 11903, 5804, 9631, 2620, 2625, 3662, 5744, 11470, 2013, 587, 7728, 2661, 9524, 9306, 8045, 8084, 5764, 3642, 11373, 3234, 1111, 10240, 6006, 7939, 192, 11181, 9821, 6606, 5597, 4385, 10374, 7826, 2544, 4069, 2481, 2088, 12217, 2867, 9598, 10488, 3827, 10288, 10267, 5045, 3169, 7030, 7962, 3316, 8744, 6465, 9604, 1555, 3762, 4824, 6755, 701, 6502, 12605, 3133, 6308, 3492, 8917, 7869, 11455, 3542, 4733, 8103, 3490, 606, 12448, 7193, 7182, 11506, 183, 4621, 6934, 911, 10938, 3376, 6362, 2198, 12339, 9456, 2748, 7910, 673, 7911, 5486, 8781, 121, 8249, 9361, 5915, 5109, 551, 4636, 1585, 2749, 2870, 9704, 8900, 4059, 9471, 10532, 9469, 4754, 7533, 8576, 9534, 8581, 4901, 1659, 1178, 2847, 7591, 11745, 7585, 4458, 1166, 5616, 6118, 449, 10362, 3531, 12442, 325, 5782, 10307, 11422, 4232, 8634, 4005, 8617, 6820, 589, 1724, 7625, 10741, 9406, 8506, 10409, 2210, 12171, 8236, 9920, 11595, 540, 9205, 1631, 12561, 3575, 6470]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -95.634415
nSV = 265
eliminating: [6272, 11320, 6530, 4185, 2475, 8496, 4134, 7855, 5422, 5847, 9589, 289, 3293, 9606, 10821, 3421, 3965, 10040, 5842, 8284, 4631, 6328, 3402, 5060, 6637, 9993, 2695, 6713, 7401, 2492, 10735, 10781, 10138, 7145, 7680, 3337, 7806, 1966, 249, 5614, 1333, 4790, 6754, 7284, 7420, 1803, 10043, 9669, 9665, 3345, 5688, 8172, 3401, 2327, 8461, 6599, 4972, 5134, 5160, 8819, 10196, 2215, 8701, 10747, 5173, 10377, 2593, 4582, 3391, 1916, 5272, 11276, 6878, 1859, 6520, 2728, 2736, 10235, 1032, 8180, 3760, 3041, 7795, 2624, 10270, 10518, 8064, 9271, 9725, 1467, 2048, 2204, 4951, 2771, 8926, 7752, 2524, 9254, 7525, 7605, 5663, 6536, 6210, 3039, 11071, 10017, 18, 9751, 10473, 10895, 3771, 593, 4012, 5098, 7753, 407, 1324, 6903, 10117, 10099, 5812, 10894, 5286, 8804, 4851, 6743, 4757, 6213, 2366, 8803, 8370, 2935, 4771, 4805, 3547, 5289, 6791, 4811, 11192, 3158, 8796, 123, 8757, 4302, 4136, 6409, 5082, 11269, 4891, 8079, 1117, 449, 10920, 8426, 6699, 253, 10326, 10553, 5369, 5366, 313, 5196, 5827, 2429, 2302, 2873, 1089, 161, 8946, 10154, 7912, 2017, 8708, 11297, 9134, 7494, 164, 6700, 8745, 10373, 7740, 5923, 6172, 3045, 6308, 5370, 3026, 4674, 2303, 1967, 8919, 4845, 10567, 7431, 10653, 3166, 5066, 4802, 444, 1599, 8924, 9870, 1212, 432, 4497, 9021, 2526, 2274, 5991, 7318, 4066, 423, 1450, 8643, 2137, 7350, 2101, 9224, 10987, 4429, 2264, 1043, 9301, 8304, 8617, 10990, 6263, 2099, 5872, 1187, 5142, 4902, 2996, 7991, 6261, 6946, 1933, 3093, 1480, 11315, 7138, 6532, 1835, 6139, 7174, 455, 5363, 2031, 5585, 5239, 5233, 9988, 9989, 5617, 1491, 216, 2396, 5086, 2328, 8525, 7762, 2838, 3531, 5765, 2275, 2138, 6629, 531, 2753, 5795, 1269, 5067, 6507, 10767, 433, 8925, 2265, 8811, 3902, 6772, 5590, 6528, 5619, 4522, 11296, 3001, 7987, 9731, 3593, 7488, 3553, 6600, 3159, 3319, 11187, 8963, 6184, 6908, 6748, 9581, 10046, 3035, 5187, 8292, 11011, 3512, 1527, 10882, 7096, 9679, 7047, 9113, 543, 1808, 11253, 4254, 3946, 2098, 9530, 2153, 4914, 9091, 10737, 7269, 2886, 3497, 7466, 5638, 9567, 9579, 10829, 5262, 8546, 796, 10, 2933, 4369, 6873, 2689, 4852, 3766, 9531, 3767, 7596, 5393, 4086, 9442, 10664, 9266, 7301, 4535, 2297, 9046, 2846, 10468, 1042, 3358, 4534, 1969, 1006, 4484, 2418, 3296, 9445, 343, 4366, 7235, 9603, 3291, 1849, 264, 1336, 11078, 1282, 10556, 1957, 6238, 4140, 4670, 1482, 8610, 5062, 3085, 1118, 7519, 2743, 3789, 8949, 8175, 3371, 4162, 4632, 10265, 6595, 5938, 10869, 2136, 2184, 1029, 1217, 2828, 10519, 10435, 3584, 7443, 3586, 3709, 6962, 5078, 1499, 6204, 4926, 8569, 9143, 8230, 9107, 2232, 1555, 1540, 7521, 5151, 8408, 144, 3713, 7159, 10715, 4776, 792, 4583, 2452, 1365, 8793, 4751, 2398, 11350, 4329, 10772, 11325, 8377, 8481, 231, 4662, 1782, 6871, 1445, 10406, 6332, 3770, 8880, 3769, 7583, 6176, 2051, 956, 10146, 2525, 5403, 6353, 7302, 3403, 5051, 7725, 9118, 7257, 7526, 6590, 3628, 4489, 9508, 2324, 2738, 7141, 8040, 2186, 9897, 11306, 3794, 4446, 10001, 1054, 3004, 8549, 4260, 4288, 9110, 346, 2311, 5832, 5276, 9048, 7864, 1533, 8159, 5816, 10704, 6800, 6099, 9966, 2334, 2245, 1614, 1794, 11047, 7340, 1811, 916, 7300, 10180, 10879, 6442, 8656, 4067, 9507, 4688, 10738, 10602, 10779, 10596, 6384, 3544, 3955, 8667, 9424, 5164, 7632, 11035, 8131, 6540, 1516, 10029, 9762, 1123, 2282, 3210, 5469, 6848, 5245, 5934, 953, 10156, 1462, 9116, 10667, 2766, 7996, 3445, 6351, 3530, 10506, 1228, 8244, 8383, 1970, 6179, 10927, 7796, 5270, 6890, 11181, 9773, 6535, 9543, 396, 6463, 5186, 6226, 2992, 9315, 10687, 9426, 207, 11236, 5195, 6037, 4242, 10447, 747, 3633, 2622, 9655, 6034, 11279, 9973, 10354, 8109, 1476, 7882, 1223, 8739, 2345, 6564, 6475, 840, 9219, 581, 6782, 6938, 3180, 5853, 4300, 527, 11052, 8013, 8786, 9043, 924, 2005, 10474, 7754, 305, 3539, 3014, 1506, 3712, 4514, 5660, 8695, 8698, 921, 7728, 9220, 1827, 7884, 9706, 8419, 8706, 2106, 7335, 7016, 9326, 553, 2235, 1444, 9346, 7310, 10423, 3492, 9714, 10234, 8950, 1906, 10516, 1382, 8912, 3268, 716, 2062, 4076, 10397, 8747, 5800, 4199, 26, 2686, 709, 6453, 7764, 5527, 5861, 3215, 1622, 9149, 10249, 57, 5703, 1767, 6164, 1459, 8449, 8641, 7541, 994, 11015, 4443, 7190, 4130, 1826, 1003, 5176, 2712, 11156, 2714, 1924, 1777, 2952, 10580, 11176, 5410, 10935, 3875, 4506, 4527, 5432, 10402, 2188, 1717, 10210, 8727, 9192, 366, 656, 8058, 1771, 8785, 4421, 1154, 10147, 3273, 6985, 8624, 7894, 3022, 772, 8746, 1488, 4143, 9855, 8306, 8972, 393, 4803, 5012, 2871, 1899, 6394, 2865, 651, 1585, 1755, 2809, 5005, 10853, 3554, 2250, 6049, 750, 7963, 9386, 6562, 3415, 8050, 3684, 8531, 5109, 834, 836, 2662, 764, 9186, 7057, 4010, 9970, 2090, 7021, 5739, 2999, 10734, 2523, 2141, 6993, 10469, 1005, 5903, 10785, 9350, 2697, 8378, 2419, 10773, 9287, 9829, 5824, 1995, 4898, 7055, 7232, 5835, 11294, 7537, 10951, 9926, 4839, 2862, 912, 1317, 4907, 10527, 1088, 5229, 3599, 6771, 6072, 6960, 5622, 3980, 8591, 4697, 2372, 10105, 3801, 7514, 904, 6094, 1101, 9099, 2700, 6893, 9997, 9486, 6390, 10282, 1208, 7203, 3493, 9272, 9927, 6478, 8589, 4293, 1942, 9635, 8442, 6980, 3011, 7874, 3018, 3434, 8943, 6510, 8086, 6464, 6976, 4725, 8452, 8468, 5344, 8252, 3188, 7949, 9600, 849, 7635, 6836, 6158, 2028, 571, 4326, 635, 10368, 323, 2554, 3867, 21, 669, 9951, 315, 5401, 8854, 9668, 341, 8568, 955, 2326, 10899, 10045, 1056, 3736, 7344, 9253, 2456, 1360, 3701, 990, 6660, 5762, 5754, 3440, 10150, 1037, 6809, 6494, 7821, 10579, 10577, 6495, 10659, 81, 10530, 477, 6658, 10357, 5790, 5961, 3679, 9568, 8965, 6736, 3636, 9434, 10239, 10248, 8560, 1545, 9205, 10535, 421, 10625, 10975, 3967, 10613, 3961, 5532, 9884, 2618, 7955, 9854, 8902, 1332, 5550, 4759, 9781, 11214, 3417, 3595, 6519, 972, 2478, 8559, 6461, 59, 10171, 7064, 1018, 9040, 5024, 9041, 9432, 7065, 51, 49, 6232, 9295, 4184, 1225, 3432, 2223, 1075, 6958, 3880, 9908, 6762, 1702, 7670, 4126, 1109, 1926, 10695, 5597, 8422, 276, 489, 6971, 9803, 7745, 7218, 7025, 9078, 284, 2406, 3812, 4558, 4515, 966, 8114, 5435, 11141, 3097, 7507, 8986, 5059, 2817, 2391, 10312, 3506, 9389, 11119, 7765, 6797, 4602, 279, 9038, 5220, 712, 64, 5704, 2980, 6370, 74, 5570, 10608, 9414, 755, 3347, 5676, 10018, 11261, 7970, 8909, 6875, 11072, 7464, 5261, 7193, 506, 9483, 301, 2174, 6448, 2173, 7192, 10918, 8941, 6252, 2601, 8482, 9076, 4008, 6083, 7001, 9516, 4933, 2340, 919, 8894, 5421, 1644, 8799, 11264, 10963, 4860, 9582, 3548, 8494, 8801, 7799, 7831, 10409, 2540, 1300, 6996, 9177, 1142, 7128, 5127, 6357, 8039, 8929, 363, 2067, 30, 4430, 8245, 2605, 8125, 9068, 5993, 5146, 6780, 3442, 173, 5977, 10187, 296, 650, 4453, 8951, 6838, 6857, 7170, 5948, 2013, 321, 5355, 9682, 5945, 1189, 9777, 4885, 8878, 1376, 7756, 10464, 5840, 8767, 5025, 10973, 5891, 2673, 5004, 3717, 3265, 3719, 10711, 5263, 1238, 3501, 4238, 4571, 703, 7095, 718, 10394, 9846, 5357, 9464, 3508, 4800, 7479, 2074, 8358, 9774, 9396, 2990, 7956, 9596, 4780, 2073, 3848, 6459, 4560, 1798, 4112, 7981, 3214, 4118, 8359]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -101.074937
nSV = 264
eliminating: [4659, 3441, 289, 6098, 6271, 3203, 8468, 5731, 9090, 6232, 3861, 3614, 2644, 607, 7187, 3897, 1682, 9859, 2249, 7808, 8959, 6720, 3588, 1334, 1518, 2545, 4648, 8910, 655, 9001, 6462, 4427, 831, 3514, 200, 3494, 1327, 975, 8883, 7880, 7434, 570, 894, 9141, 3479, 4051, 7642, 6163, 2242, 6881, 590, 867, 1479, 1820, 8582, 8880, 5456, 885, 5131, 1053, 5521, 5117, 4650, 3648, 8038, 9355, 9279, 2818, 3365, 2935, 7779, 8167, 8169, 3035, 9820, 572, 2052, 7922, 10166, 8859, 6119, 2391, 9126, 6434, 7645, 131, 133, 1300, 7942, 5188, 2264, 9067, 7496, 3150, 3703, 1684, 8952, 8958, 2647, 3576, 1157, 6542, 689, 7592, 8437, 6054, 4727, 2635, 6435, 6267, 8820, 5552, 6609, 7114, 3122, 2552, 6129, 5229, 8828, 4433, 858, 7812, 186, 307, 1817, 144, 4832, 6506, 3689, 3686, 2919, 201, 1171, 9811, 8721, 6010, 2074, 10175, 8924, 3230, 984, 5257, 143, 4785, 1229, 5667, 2899, 9558, 4346, 2366, 5235, 5205, 6410, 4361, 2823, 5622, 4654, 2409, 4200, 5830, 2140, 7198, 6691, 8812, 4046, 4975, 5030, 5323, 4276, 8581, 2066, 9154, 7518, 859, 2050, 9039, 5907, 1931, 1943, 2091, 2252, 2201, 5908, 6341, 7207, 591, 7687, 5269, 1243, 7728, 7772, 862, 6461, 9178, 6429, 6421, 9387, 7947, 6633, 1623, 2124, 8989, 5836, 7701, 1649, 5103, 3487, 7261, 6806, 3913, 297, 10165, 7491, 6044, 6062, 1035, 10211, 3420, 7747, 9316, 956, 7573, 6518, 834, 7064, 6449, 3610, 5182, 4252, 1398, 2559, 1915, 798, 7254, 5373, 5926, 7095, 7360, 8497, 5197, 4126, 2690, 1766, 6137, 4573, 7577, 1663, 9235, 3485, 2350, 306, 431, 728, 7814, 7848, 6887, 6404, 2247, 7109, 2022, 9048, 2002, 8049, 4729, 1993, 7918, 2557, 9542, 5785, 4910, 1464, 5795, 8387, 8897, 5683, 714, 8551, 3577, 6685, 3351, 171, 4453, 8200, 4007, 7698, 459, 8229, 8024, 1161, 7101, 960, 5319, 10081, 2710, 5871, 6281, 7370, 6675, 207, 5668, 9548, 3994, 8204, 3503, 8817, 3999, 1999, 1796, 10131, 9040, 5783, 796, 4579, 8991, 4955, 2742, 5459, 1233, 9035, 1655, 1985, 8727, 1026, 6319, 9782, 3742, 8301, 7228, 6917, 8354, 8950, 2885, 6762, 7586, 7438, 2133, 7355, 7351, 8738, 10000, 7052, 3311, 7129, 8698, 7802, 528, 7048, 7088, 6965, 3099, 9208, 1179, 9276, 4290, 9111, 4311, 4134, 1463, 4768, 1226, 7935, 3456, 4760, 5085, 1234, 7933, 8287, 5937, 4402, 1577, 7666, 4472, 291, 5397, 1776, 6299, 8102, 7948, 2172, 2036, 8418, 4599, 4597, 1476, 8137, 4119, 6999, 7724, 190, 9081, 6413, 649, 8493, 2415, 5147, 3358, 9578, 2410, 2417, 9403, 7174, 6789, 5273, 7840, 5259, 5256, 6979, 6471, 1019, 4586, 5736, 4439, 952, 6060, 9248, 9034, 3688, 3869, 9242, 8849, 8847, 1972, 9003, 148, 4058, 145, 3622, 2450, 8156, 498, 5815, 5452, 6218, 659, 2782, 9244, 7197, 1472, 5436, 5445, 1426, 3804, 4347, 8807, 2367, 9358, 6087, 8036, 9404, 3334, 3713, 5031, 6725, 1054, 2942, 9453, 3373, 8293, 10036, 4969, 4219, 6758, 5384, 2584, 4073, 3680, 1529, 9163, 8508, 9113, 9912, 3101, 6214, 1613, 4069, 7978, 9520, 9826, 3733, 6058, 5567, 6993, 7686, 6380, 3916, 2130, 5820, 3031, 8105, 5909, 1840, 1831, 6175, 797, 1323, 7985, 3360, 4943, 8345, 2198, 7563, 7436, 2321, 7689, 5525, 4547, 1077, 9378, 5395, 5529, 6618, 5733, 6498, 2475, 5348, 2678, 1006, 9805, 2014, 2709, 6288, 5646, 9752, 9753, 9256, 5873, 3315, 1648, 1174, 7463, 8174, 3228, 3868, 873, 8885, 9505, 2526, 6628, 957, 9461, 8983, 7874, 5140, 7127, 3045, 7574, 501, 6104, 6046, 6178, 6352, 3421, 4819, 8660, 1537, 1308, 6052, 1042, 696, 4815, 2394, 6700, 1738, 9670, 4366, 8110, 9098, 2853, 799, 4866, 5569, 9457, 4177, 5266, 7907, 1736, 9108, 9099, 4761, 8951, 5317, 5154, 8969, 3702, 7196, 9736, 6746, 8492, 2144, 9714, 4205, 647, 8488, 96, 10006, 8450, 2636, 8378, 745, 53, 2993, 8143, 7155, 3270, 9009, 8524, 7485, 6124, 7654, 3997, 4367, 3813, 2601, 7188, 5125, 1488, 9678, 3725, 8921, 4574, 6658, 8313, 8428, 3745, 897, 4373, 5160, 2577, 8268, 2661, 5275, 3469, 3545, 4236, 3844, 2875, 855, 6578, 9094, 10185, 5472, 6958, 8062, 7320, 6934, 7827, 9666, 4365, 8759, 2596, 1221, 3376, 10202, 8587, 7194, 8286, 5086, 7539, 5464, 9202, 7538, 9100, 10122, 7191, 1567, 3704, 3933, 2643, 3619, 9493, 3097, 1739, 6210, 6212, 5631, 5225, 3538, 6003, 3516, 453, 5247, 3310, 399, 9189, 7924, 73, 6402, 1968, 1273, 4107, 2208, 5671, 8173, 4802, 7106, 9210, 3735, 7342, 6676, 4455, 7171, 8400, 2122, 8088, 7599, 7488, 7828, 4010, 437, 10159, 6951, 6024, 6904, 6134, 8623, 4390, 1691, 5956, 7709, 2642, 4622, 4744, 6870, 2762, 38, 4198, 5301, 3154, 377, 9285, 8067, 2822, 3173, 7011, 193, 10088, 9346, 7266, 8289, 5023, 3808, 3372, 5791, 2419, 2536, 9869, 2145, 4697, 7756, 3775, 1471, 5584, 6931, 4742, 8895, 3344, 3346, 7477, 3378, 3164, 7335, 8595, 8543, 6406, 10090, 9732, 5681, 723, 1498, 9633, 9575, 6487, 2533, 6728, 9949, 4509, 8374, 5280, 5242, 5215, 196, 3438, 5889, 5975, 254, 4991, 8528, 2365, 2323, 9483, 10121, 4041, 4977, 5676, 9569, 7012, 5216, 9867, 6717, 3809, 6386, 2373, 8026, 1064, 3932, 8292, 1373, 2328, 5282, 5660, 4094, 412, 9893, 4360, 1440, 3799, 6081, 7715, 5449, 2758, 6681, 6479, 5932, 4935, 8477, 7184, 6221, 935, 9416, 10179, 9390, 316, 6392, 6764, 5099, 1533, 7790, 4628, 551, 7474, 7807, 4766, 9870, 7762, 6629, 1542, 3724, 959, 2351, 8570, 3482, 7490, 4818, 2715, 137, 2923, 5075, 2487, 582, 6530, 8056, 8094, 1188, 5252, 7630, 6954, 5422, 5639, 2285, 3764, 7696, 1981, 8233, 1960, 1743, 10094, 6277, 465, 6050, 5702, 6962, 8182, 283, 6823, 228, 114, 1795, 2618, 6405, 1442, 3642, 5248, 9434, 7067, 1412, 8410, 6013, 8700, 1309, 8098, 1293, 9707, 2978, 156, 3463, 6149, 9234, 7455, 9496, 1220, 2357, 52, 3567, 3665, 1365, 7480, 2897, 8445, 169, 8138, 680, 4099, 8448, 5511, 4690, 9481, 8482, 6205, 2903, 4971, 4983, 3572, 7336, 3168, 5679, 4044, 1692, 9015, 1862, 5238, 2989, 4380, 4408, 10066, 8465, 8794, 880, 3924, 6876, 5113, 1176, 5366, 1003, 5080, 3910, 9780, 1145, 8906, 6798, 6274, 8123, 9812, 6428, 2178, 10177, 1021, 9941, 6465, 5541, 1168, 3741, 1650, 3852, 2101, 1151, 565, 5634, 8518, 8042, 10061, 8402, 7063, 2275, 629, 7616, 98, 9031, 4533, 9236, 8671, 5697, 7975, 8350, 1977, 7994, 3418, 4483, 4436, 8825, 10210, 9718, 3753, 3305, 7347, 2115, 7168, 123, 8672, 7576, 2483, 558, 2747, 4175, 2261, 9119, 9518, 7112, 237, 5300, 5428, 9934, 2286, 3223]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -109.159654
nSV = 261
eliminating: [3257, 8679, 3138, 4543, 8352, 5754, 366, 7149, 4458, 3041, 5583, 7748, 3965, 2713, 8814, 2662, 3892, 622, 9003, 8172, 6449, 329, 4222, 6478, 2026, 547, 3317, 5497, 7689, 8586, 7718, 6907, 227, 8597, 1564, 5511, 8395, 6387, 2501, 927, 2509, 3385, 7775, 1959, 1809, 1675, 1136, 3714, 4276, 8936, 2376, 7101, 4425, 4026, 793, 7946, 5860, 233, 3524, 4060, 6925, 5139, 6642, 3672, 5331, 3329, 9034, 7923, 6610, 7237, 6615, 5389, 1689, 8110, 339, 2868, 7617, 234, 2990, 8612, 2823, 6524, 6565, 2122, 8509, 4709, 6880, 8835, 3079, 923, 1163, 4309, 4686, 5825, 5518, 4118, 7397, 5933, 2279, 7788, 2418, 6174, 2461, 5710, 5212, 5159, 9198, 1257, 1717, 7070, 2289, 9150, 5503, 3483, 2961, 4562, 33, 2065, 4850, 2061, 5645, 396, 3690, 8098, 645, 5172, 7777, 7152, 1964, 3273, 1026, 4632, 7180, 4207, 1261, 4651, 7021, 2786, 3953, 7582, 5589, 5213, 4713, 6133, 3220, 5350, 857, 4105, 7587, 4998, 7366, 8890, 273, 6105, 3211, 8455, 2955, 2933, 3181, 4649, 6655, 9131, 6798, 1843, 4078, 8070, 1997, 8783, 6557, 1211, 4947, 8689, 7220, 1973, 7199, 6946, 2942, 7791, 4935, 1953, 4647, 3301, 8333, 1939, 7319, 3869, 4507, 4520, 7410, 8158, 6951, 4648, 2626, 953, 2143, 2659, 2444, 9085, 8199, 5272, 3595, 911, 8145, 5561, 6937, 289, 286, 690, 1270, 7673, 2378, 6978, 4359, 5525, 3105, 6869, 2760, 5279, 8147, 6544, 123, 6530, 1472, 3529, 8787, 5641, 3534, 7118, 8227, 9123, 855, 8385, 2952, 5778, 7784, 1641, 4314, 808, 6393, 5901, 79, 627, 4964, 8173, 2539, 902, 7944, 167, 662, 5534, 6277, 3486, 4854, 6197, 4551, 2073, 98, 3928, 4704, 1818, 4707, 1816, 6473, 661, 7226, 2021, 4514, 4637, 2345, 8154, 2736, 2850, 3931, 7744, 9065, 2745, 3437, 8665, 8667, 7670, 3522, 3364, 6891, 1060, 2771, 4334, 5058, 2759, 5148, 8886, 1085, 5661, 6644, 4197, 2448, 6763, 5262, 6500, 4253, 3578, 8266, 1238, 3450, 6322, 1335, 5231, 4295, 4775, 4251, 6992, 2865, 6945, 8337, 3061, 5369, 2993, 275, 3296, 7939, 4451, 277, 7970, 5773, 4019, 1125, 7312, 1595, 406, 4958, 4196, 4961, 6890, 6866, 4381, 4342, 1781, 251, 707, 7025, 8948, 5201, 1354, 8808, 3444, 6314, 7318, 2730, 8813, 1845, 3979, 3883, 4746, 3566, 8907, 8262, 4664, 5128, 654, 8694, 7754, 3969, 1110, 1686, 6811, 3944, 7746, 3753, 6081, 8601, 5839, 3872, 8526, 174, 3893, 5356, 6955, 8782, 8519, 7322, 8900, 6504, 8899, 8163, 2711, 4233, 3029, 2886, 3807, 7174, 4484, 480, 2408, 6717, 5803, 7215, 9038, 5353, 1358, 2637, 2340, 6986, 8021, 5695, 3018, 3836, 9180, 1756, 4822, 3501, 1801, 5663, 3175, 1912, 415, 7703, 5453, 7404, 7803, 6003, 1577, 5977, 4397, 686, 1822, 6293, 5468, 722, 4698, 5685, 2612, 552, 3564, 8280, 8400, 7914, 18, 333, 8151, 3302, 7272, 7295, 3062, 9000, 2712, 7045, 1102, 3422, 2668, 1263, 5605, 2437, 7415, 9060, 9062, 7527, 6104, 3304, 7408, 2608, 6851, 6767, 2010, 2928, 4328, 7960, 1376, 6298, 8996, 8920, 725, 6000, 6355, 5473, 4837, 6652, 4303, 4101, 1407, 771, 1361, 6606, 4483, 5501, 4034, 7653, 4867, 863, 799, 6162, 527, 5655, 6214, 7166, 1793, 3642, 313, 3641, 3634, 2128, 2126, 3100, 391, 8606, 7906, 1883, 4982, 7630, 8603, 4987, 1237, 7999, 2969, 4153, 7280, 8768, 882, 3194, 3152, 231, 6823, 6860, 197, 3037, 5859, 4059, 748, 3718, 57, 7676, 118, 116, 8980, 2381, 937, 9056, 2421, 5818, 1332, 5322, 592, 6325, 4611, 7917, 8005, 4513, 7737, 7043, 1745, 1574, 3989, 3758, 2018, 1703, 8153, 7259, 8183, 4215, 4291, 2861, 6487, 8678, 8663, 3261, 4063, 287, 8437, 5953, 7443, 705, 6091, 4459, 3713, 425, 3113, 282, 285, 8096, 4601, 126, 6624, 5087, 6541, 2795, 6739, 5277, 5986, 3071, 7865, 8615, 8605, 2935, 1820, 5979, 4675, 6301, 6999, 7561, 8534, 779, 5885, 4015, 9176, 5768, 8904, 8283, 2290, 5324, 2557, 4812, 5240, 6038, 2423, 1442, 2656, 1240, 3704, 3865, 7634, 4088, 7414, 7604, 581, 3871, 6194, 5288, 5863, 5552, 6259, 71, 7001, 3864, 5424, 3387, 8486, 5035, 594, 3504, 1176, 769, 2124, 4092, 3052, 2587, 5855, 4991, 1165, 2242, 235, 7026, 1864, 9117, 2271, 3491, 68, 1450, 6438, 6661, 1872, 483, 5146, 121, 8206, 7244, 2400, 8230, 3465, 5414, 7438, 1851, 5897, 8388, 8554, 9186, 8091, 8654, 5747, 5093, 6605, 3833, 3514, 924, 7951, 4416, 4783, 271, 8629, 1788, 4427, 4389, 7121, 8649, 854, 4905, 2998, 695, 7611, 318, 9068, 7372, 1308, 5365, 6303, 4128, 1049, 9030, 7714, 5400, 973, 8989, 7210, 6176, 2538, 3696, 7362, 6506, 8913, 96, 5535, 4114, 2394, 4803, 4794, 6840, 3447, 4669, 8102, 7601, 5528, 3555, 9101, 9106, 4663, 1946, 6078, 2120, 1303, 4176, 6613, 8925, 4296, 6458, 7111, 1445, 3313, 3328, 2497, 1008, 5382, 6792, 4810, 4804, 5721, 6494, 1870, 243, 6535, 6649, 7702, 139, 2459, 2717, 3014, 3785, 5465, 456, 6867, 5522, 5101, 7346, 1621, 672, 7024, 300, 5951, 3336, 8074, 1594, 1568, 3156, 8243, 6160, 2139, 5005, 960, 850, 3348, 3146, 4467, 4766, 2319, 3817, 1996, 3541, 5824, 709, 710, 5579, 6879, 8217, 1405, 4124, 3149, 1790, 2337, 9183, 3177, 4395, 876, 3209, 6549, 8415, 2076, 5577, 6279, 2086, 6948, 8259, 8247, 5541, 8075, 6404, 8195, 1269, 4266, 2163, 2807, 2647, 8736, 8039, 8193, 5816, 941, 2763, 5103, 3859, 6540, 7738, 2673, 1290, 4597, 8514, 5702, 8470, 1913, 269, 4571, 3977, 5698, 7274, 4923, 2496, 1304, 8282, 2297, 1364, 656, 5766, 2117, 5127, 7996, 7040, 4791, 6803, 4670, 5138, 2997, 5320, 6349, 6350, 5306, 5009, 3281, 8314, 4374, 8995, 1616, 7781, 2249, 7182, 6691, 2837, 9160, 2071, 5560, 1045, 4408, 5449, 4699, 1911, 2702, 8321, 1824, 1258, 4575, 5454, 912, 6845, 7971, 5664, 4595, 1716, 4624, 2062, 8313, 8842, 5937, 2454, 8983, 1148, 8504, 5568, 781, 6228, 670, 1150, 3760, 3773, 6288, 2485, 3954, 1288]
training using liblinear
solver 1
.*
optimization finished, #iter = 11
Objective value = -119.285459
nSV = 262
eliminating: [1379, 1423, 6756, 8198, 2828, 6288, 6255, 3501, 5472, 7103, 6585, 2456, 6846, 3086, 4624, 6541, 7205, 2079, 1223, 5689, 997, 4188, 8056, 6844, 5028, 2384, 6332, 2794, 574, 2849, 3243, 674, 6945, 3271, 647, 479, 6358, 6656, 6911, 6547, 4583, 4585, 125, 5666, 61, 2813, 2791, 6445, 944, 957, 7243, 5979, 5645, 8244, 4021, 4150, 5221, 6470, 6937, 71, 7325, 5615, 3964, 2846, 3980, 1888, 6316, 1357, 29, 4175, 8052, 4477, 6125, 8008, 433, 7664, 4876, 3008, 3707, 8130, 1717, 1321, 8160, 6557, 7398, 4548, 7427, 3981, 5798, 4215, 4164, 7118, 5671, 4302, 4679, 1380, 5985, 2641, 3694, 2533, 6509, 3579, 1003, 3218, 4567, 79, 2314, 8154, 3525, 6428, 7141, 332, 4838, 3799, 3875, 329, 5322, 4351, 6973, 335, 3301, 86, 7184, 4617, 3375, 2926, 2475, 5583, 7559, 5450, 3515, 2921, 2987, 2990, 6396, 3835, 1556, 6217, 5254, 2317, 6335, 2285, 6566, 4728, 1919, 1203, 2407, 2763, 2101, 6545, 3226, 7980, 8287, 4745, 2222, 1787, 5974, 6279, 5115, 264, 4194, 8283, 1468, 5223, 371, 5997, 372, 688, 2076, 7172, 742, 6478, 3889, 4949, 7828, 7362, 5834, 4244, 6864, 7771, 7037, 4434, 5196, 6210, 6957, 7718, 2770, 6975, 8170, 165, 2400, 6223, 1956, 2120, 4913, 4921, 6843, 1601, 2423, 7754, 850, 1893, 1861, 6083, 270, 7377, 7474, 4003, 3446, 3155, 6347, 2110, 701, 1793, 1855, 5936, 3250, 5378, 5441, 5825, 5092, 3913, 1145, 1069, 3785, 3629, 3623, 6085, 4833, 3663, 3904, 7339, 7188, 6706, 6703, 4055, 6399, 3826, 4543, 6956, 7725, 6287, 3028, 2914, 4619, 5586, 5187, 1538, 2639, 3517, 4280, 404, 8187, 119, 1098, 8188, 2858, 6527, 8184, 7447, 7419, 6433, 3661, 2420, 3660, 7528, 5319, 6093, 884, 1949, 3067, 2653, 5282, 3136, 3254, 7681, 4235, 4630, 3157, 658, 2008, 6318, 2680, 6062, 2801, 638, 5381, 522, 2426, 4835, 2503, 936, 3021, 5008, 1815, 3192, 8117, 1730, 1033, 1186, 468, 3398, 6033, 5598, 6463, 6560, 3940, 6487, 2563, 3737, 6908, 423, 5546, 5340, 1517, 441, 7637, 4038, 69, 4491, 2615, 4494, 5733, 3760, 6711, 7492, 2518, 5741, 1150, 4476, 720, 2760, 5953, 5443, 1106, 2369, 1710, 650, 4460, 3744, 2276, 6342, 601, 1886, 2606, 2097, 5336, 6467, 943, 3993, 3325, 1562, 4514, 5995, 135, 4519, 705, 2904, 6949, 1989, 7970, 2479, 1533, 1826, 7807, 2129, 4604, 6985, 1938, 13, 2052, 8224, 2260, 558, 77, 6253, 4243, 2137, 1671, 3676, 4839, 610, 287, 8037, 3564, 3299, 333, 5251, 1552, 3027, 543, 455, 58, 1707, 8073, 2249, 2144, 6340, 6292, 5131, 3764, 2952, 4809, 1796, 644, 1777, 5498, 928, 3990, 3252, 1010, 1506, 1246, 2430, 5935, 4404, 6231, 6471, 3139, 4592, 3056, 3796, 3354, 408, 1658, 2664, 1469, 6941, 4408, 2782, 1686, 2658, 608, 2850, 6939, 1136, 6061, 1090, 2401, 5100, 1786, 5091, 7275, 1014, 7512, 7242, 5387, 4595, 2513, 7863, 1354, 7951, 1959, 3852, 2467, 8161, 3900, 87, 6479, 1523, 7081, 718, 223, 6800, 1280, 7099, 2170, 1833, 2918, 5629, 48, 7906, 6708, 6540, 1179, 6, 7727, 5422, 1341, 7031, 996, 6584, 1911, 4606, 4613, 3220, 7742, 1810, 4950, 1487, 2961, 5744, 2607, 6305, 3504, 1512, 7440, 4342, 4885, 5968, 6205, 7759, 7403, 3441, 4977, 7084, 6402, 1310, 782, 5247, 136, 2879, 6184, 3955, 301, 3311, 5298, 2848, 6648, 1297, 2405, 758, 475, 6994, 5367, 7699, 6060, 1183, 5330, 121, 3963, 7911, 7546, 887, 7348, 1968, 6452, 1868, 7928, 5458, 4249, 1030, 2336, 2767, 596, 1201, 7781, 5807, 4740, 6582, 6130, 1125, 75, 5851, 2758, 3837, 6018, 2322, 7716, 2372, 602, 6036, 315, 7756, 6416, 7404, 5595, 3934, 3977, 7116, 2113, 3812, 2115, 4236, 2114, 4368, 7174, 5300, 518, 1182, 7696, 1180, 3472, 1647, 1649, 6712, 3423, 6688, 1452, 3473, 7695, 6235, 7840, 2214, 7871, 5539, 5278, 5144, 4598, 4024, 476, 4534, 7682, 7634, 122, 2037, 8131, 6405, 6855, 7311, 236, 6759, 5431, 4179, 6484, 7650, 1112, 829, 2206, 4040, 6309, 6548, 7082, 7016, 2024, 800, 6475, 901, 7484, 2094, 1698, 1097, 8095, 430, 367, 7946, 3291, 3334, 3356, 7977, 2719, 3481, 4889, 2669, 3662, 2514, 3958, 6056, 5395, 4116, 4445, 7832, 5015, 5141, 3641, 4546, 8140, 765, 7639, 6609, 2460, 6486, 6828, 1419, 7633, 2441, 7575, 2350, 393, 5695, 5362, 926, 8107, 2605, 1965, 1883, 2192, 7868, 3173, 1134, 5873, 4357, 827, 4273, 933, 5516, 4690, 6300, 605, 440, 50, 1875, 7307, 5160, 6010, 6378, 3417, 2852, 5174, 7062, 4868, 904, 5480, 7190, 3829, 1088, 1011, 162, 7229, 60, 3985, 5080, 4673, 2364, 2976, 897, 1020, 3741, 6172, 7612, 5987, 1713, 6324, 1858, 4343, 3210, 5509, 1637, 1848, 2795, 5369, 4347, 2406, 2377, 7923, 6821, 6298, 7013, 3725, 6883, 4782, 7544, 8137, 2213, 203, 4817, 3647, 2457, 1055, 3615, 7573, 4067, 1298, 3793, 4480, 4400, 2283, 7669, 3770, 6853, 5820, 3116, 2195, 2257, 2590, 2416, 6869, 7567, 4737, 3115, 3054, 6473, 5375, 7916, 443, 7893, 2158, 3163, 3967, 6158, 7020, 6167, 3883, 2557, 5877, 941, 1584, 5000, 3633, 1657, 2869, 624, 1744, 7215, 2716, 2808, 5916, 975, 209, 7465, 7002, 3412, 6552, 3451, 1944, 6825, 3635, 7282, 5233, 6460, 6022, 463, 664, 2026, 5977, 673, 2812, 6175, 6251, 2194, 7232, 1529, 7638, 320, 6515, 7676, 1693, 635]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -128.761659
nSV = 261
eliminating: [4430, 5400, 444, 2870, 2264, 4295, 3843, 1066, 158, 1991, 95, 6015, 1952, 5043, 245, 4118, 6008, 1552, 1352, 1060, 5531, 1441, 6201, 4552, 5604, 6688, 1876, 4852, 38, 2206, 3765, 3872, 2784, 510, 39, 549, 32, 5877, 7398, 2025, 3191, 2959, 3876, 1839, 1285, 6949, 2753, 2862, 4345, 1462, 1465, 2482, 4404, 1735, 7407, 2173, 1464, 2426, 7223, 4971, 7144, 925, 936, 4997, 5199, 1287, 4946, 3959, 6878, 2833, 3136, 2759, 3629, 1729, 3011, 5529, 2616, 7128, 2045, 5277, 1072, 6178, 2081, 5607, 6461, 4028, 6963, 2159, 1168, 4682, 3444, 3753, 3569, 915, 2172, 3391, 4012, 4746, 4121, 4582, 460, 1492, 1561, 162, 5228, 2389, 400, 5457, 6650, 3732, 658, 3931, 5000, 149, 150, 2520, 7041, 4516, 947, 6937, 3740, 334, 3120, 5799, 7359, 6267, 2933, 5554, 5629, 6084, 5564, 2032, 5489, 859, 5213, 5222, 49, 54, 1368, 4619, 6737, 6724, 1856, 4422, 4702, 864, 5843, 5464, 4410, 7432, 2866, 1380, 5997, 6809, 2668, 5761, 265, 3129, 6935, 3625, 6270, 1428, 268, 7208, 4680, 6901, 6421, 5243, 3375, 3133, 2077, 4235, 6102, 7039, 5164, 522, 6934, 837, 4858, 4507, 7296, 2924, 2393, 5591, 1607, 209, 5807, 6984, 2952, 5971, 289, 4276, 5044, 3617, 2978, 4760, 591, 7321, 5391, 430, 5364, 6744, 3800, 1543, 1900, 171, 5904, 3942, 5821, 6351, 637, 6914, 6398, 7384, 5108, 2449, 2895, 1889, 3260, 5946, 318, 556, 1936, 2497, 2499, 2510, 1557, 2732, 560, 1489, 1324, 1302, 6489, 6931, 2942, 3005, 1366, 239, 2926, 4409, 4584, 4260, 5619, 4825, 5552, 5082, 3524, 5302, 5288, 4060, 5357, 5574, 3588, 7020, 3306, 6458, 6263, 2617, 2352, 3134, 2613, 118, 2745, 4175, 2551, 3966, 5142, 188, 92, 5052, 5168, 4709, 2167, 934, 6133, 6774, 1219, 3515, 1222, 586, 1025, 3286, 625, 4481, 2948, 228, 951, 3372, 2485, 5313, 6858, 4624, 5050, 5835, 4514, 4293, 2819, 4981, 3531, 4215, 2735, 26, 4184, 3322, 6329, 5091, 5097, 3550, 5298, 5814, 967, 5467, 2855, 1951, 312, 1114, 7413, 85, 6897, 4688, 878, 94, 4828, 5405, 552, 6250, 1259, 1396, 1503, 2477, 903, 4734, 3657, 545, 528, 4729, 3037, 5367, 5895, 6846, 6249, 3427, 4912, 6623, 6485, 5262, 5852, 1775, 5328, 2768, 1738, 3221, 6946, 6710, 129, 44, 5261, 6477, 442, 7185, 7040, 6991, 2046, 3197, 1084, 3295, 7438, 3383, 551, 5701, 6274, 310, 5026, 3762, 6819, 3154, 5025, 6238, 717, 5487, 3596, 4488, 4815, 5358, 2380, 3494, 5734, 7159, 5842, 4854, 6085, 5287, 6266, 5351, 2495, 5553, 2381, 2140, 4396, 90, 5506, 6685, 1483, 2232, 6042, 2837, 4158, 1306, 3923, 7066, 3612, 2435, 4287, 6014, 75, 2730, 2233, 563, 2838, 356, 219, 1487, 4504, 5769, 2417, 3731, 251, 1508, 7094, 511, 3804, 6948, 7179, 4782, 3607, 6801, 4875, 471, 435, 5246, 4078, 4307, 2301, 2470, 6161, 2192, 771, 2154, 4022, 3631, 2071, 2873, 7367, 6799, 4076, 1534, 3558, 840, 5886, 5974, 1107, 1599, 2846, 4386, 405, 2190, 2270, 2148, 2385, 4151, 2549, 6065, 6315, 5196, 183, 5511, 5215, 6119, 449, 5685, 1170, 4727, 1282, 1255, 4236, 2608, 6186, 7396, 2351, 1003, 6257, 3663, 2610, 4523, 4530, 3304, 257, 3035, 7123, 515, 514, 773, 3690, 6123, 571, 5824, 3676, 4835, 1117, 4670, 364, 2509, 1567, 5545, 2295, 1370, 2228, 157, 6513, 4414, 1622, 2142, 2913, 2548, 3598, 6998, 2135, 4315, 2131, 3034, 4532, 1774, 261, 304, 6410, 5370, 6625, 83, 1581, 4134, 5128, 68, 3871, 3949, 6277, 4512, 884, 5281, 6899, 5122, 7232, 2410, 5755, 1010, 3655, 6703, 7209, 6770, 4669, 3424, 1257, 4346, 2796, 6096, 3873, 7371, 5914, 3868, 778, 6391, 6185, 4145, 2404, 4241, 1945, 7032, 1870, 4908, 6692, 1715, 6745, 5315, 2795, 770, 4631, 5106, 3458, 991, 4926, 7005, 6829, 1994, 5494, 2371, 2698, 2702, 3500, 927, 7460, 2565, 53, 3687, 2545, 6790, 5331, 705, 4660, 5190, 2242, 6371, 381, 6328, 5903, 5049, 7115, 4250, 4918, 5677, 1115, 5970, 3467, 1887, 7171, 1718, 3384, 6603, 1100, 5846, 5641, 4030, 3212, 4525, 3183, 3679, 498, 6711, 500, 7342, 2093, 6820, 6752, 5061, 2981, 1220, 3577, 1559, 4649, 3546, 1621, 5614, 5342, 5145, 5356, 155, 7199, 2494, 3689, 5918, 2378, 5422, 7270, 2480, 5397, 6354, 4326, 5373, 3653, 1256, 3167, 4920, 6687, 7011, 7021, 7236, 2623, 3474, 2517, 1957, 3782, 1437, 780, 4280, 3700, 6794, 2065, 375, 866, 4317, 2111, 4464, 3269, 594, 5929, 3640, 3510, 3388, 446, 5972, 6694, 4951, 3238, 286, 1678, 2149, 6294, 2174, 4091, 6542, 6347, 339, 7345, 4082, 730, 2733, 3117, 7449, 4943, 916, 2433, 4569, 1491, 1657, 7173, 1598, 4536, 6696, 3335, 244, 5869, 5924, 5363, 2184, 686, 4069, 6127, 3817, 6695, 1300, 5615, 3190, 3202, 2876, 4050, 1216, 6059, 5596]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -140.033650
nSV = 262
eliminating: [1108, 932, 6152, 6136, 5735, 683, 2441, 4740, 4202, 6289, 6714, 6232, 5676, 150, 3479, 3378, 675, 748, 1048, 1000, 6362, 3164, 3888, 2944, 4463, 592, 1909, 1227, 6242, 3430, 3597, 854, 6615, 6376, 2673, 4406, 4190, 1140, 3544, 1197, 3933, 4060, 4152, 6181, 5234, 5288, 3007, 1124, 983, 2729, 3226, 2852, 6027, 5959, 2277, 3043, 2891, 3581, 5058, 2597, 4257, 351, 5346, 3538, 4940, 5789, 3475, 5409, 3766, 4070, 5222, 1234, 1860, 3060, 3003, 2940, 6404, 743, 5924, 2472, 4981, 3196, 1452, 4250, 3190, 4373, 504, 1035, 5792, 997, 5573, 4642, 6117, 5174, 3688, 3166, 5072, 135, 3022, 2036, 5084, 1795, 4140, 3129, 3835, 6506, 5601, 3070, 2695, 5831, 5123, 112, 1777, 3292, 1725, 2127, 2732, 5441, 1058, 1356, 6355, 5307, 3301, 6591, 3960, 3313, 1984, 211, 6697, 3649, 4062, 3417, 4285, 6238, 1410, 1670, 4023, 6536, 3045, 4610, 559, 1945, 1931, 6417, 3260, 2579, 3267, 3271, 3281, 4715, 2766, 3438, 6608, 2864, 1470, 2875, 1831, 3389, 4751, 464, 1104, 6125, 3297, 1948, 1131, 3491, 1778, 2696, 724, 6316, 3086, 3554, 5823, 3580, 1313, 1311, 513, 1794, 4909, 3665, 4014, 3343, 4241, 1371, 648, 3186, 5927, 1816, 2317, 2700, 2184, 1734, 4512, 6154, 6617, 2126, 1560, 2970, 2707, 2878, 5922, 4741, 3701, 4400, 3066, 3130, 2879, 2265, 5492, 2360, 5578, 3445, 3902, 3492, 5964, 231, 2153, 2799, 3262, 2088, 5640, 232, 2573, 6487, 4739, 3425, 2436, 5062, 2212, 2176, 4826, 1827, 1871, 1279, 5412, 5559, 6359, 5579, 6036, 589, 1262, 3623, 5754, 5751, 1299, 5666, 3750, 640, 1438, 5302, 1963, 2141, 410, 6110, 3868, 3121, 6336, 3181, 978, 6173, 4025, 2367, 949, 5655, 4953, 6583, 4144, 760, 6176, 6104, 24, 4449, 6395, 5073, 4555, 6012, 996, 476, 1451, 1466, 2920, 4207, 659, 2929, 3089, 3026, 363, 2466, 3988, 151, 406, 407, 602, 994, 1229, 812, 6140, 6048, 2735, 2736, 6713, 88, 2433, 5327, 2990, 1823, 4599, 5079, 5157, 1681, 1942, 5042, 556, 5615, 1578, 1971, 4627, 1866, 5860, 6177, 6499, 5141, 3093, 1528, 1406, 4869, 6133, 6200, 4814, 3238, 5709, 649, 4888, 4063, 4926, 3172, 6626, 5274, 5217, 4178, 2935, 5977, 6352, 176, 1158, 5250, 397, 1797, 2473, 3191, 5742, 4628, 3318, 3136, 4770, 6360, 1650, 2746, 275, 619, 5271, 5673, 3562, 1713, 5833, 6405, 90, 2044, 3515, 4906, 5926, 4867, 3481, 1972, 1753, 6258, 5167, 5478, 5166, 6259, 1418, 1588, 5538, 4031, 3100, 1752, 6562, 5316, 2376, 6013, 3743, 187, 3208, 585, 2903, 5249, 4247, 5899, 511, 4154, 5576, 1427, 5210, 601, 3367, 1407, 617, 461, 2900, 3673, 3587, 2437, 1669, 3087, 6459, 6398, 2479, 4427, 2848, 5419, 1478, 6119, 2876, 4085, 2967, 946, 3380, 6081, 2151, 1462, 1453, 5111, 3894, 203, 6699, 1433, 3143, 1667, 5541, 5945, 5284, 5033, 387, 6609, 2866, 560, 4975, 1709, 1003, 6138, 4927, 3197, 4876, 2196, 5474, 5506, 5523, 943, 1917, 2998, 6644, 863, 1552, 6592, 1537, 1644, 2931, 50, 1826, 6593, 600, 598, 855, 3432, 5193, 303, 5888, 5889, 3525, 4414, 877, 872, 2143, 284, 3314, 3761, 3337, 3711, 4222, 3214, 4098, 2716, 6315, 1678, 3131, 233, 1283, 2486, 1951, 2833, 4263, 5694, 4307, 414, 5420, 3371, 4066, 3307, 4968, 686, 3280, 5165, 1992, 2078, 1622, 2210, 4999, 1690, 5152, 3762, 3020, 402, 4124, 1695, 5447, 326, 6712, 482, 1370, 1402, 2474, 1682, 1346, 2611, 1173, 2902, 3320, 6299, 6700, 995, 4035, 5339, 2508, 2708, 1555, 3482, 3046, 4724, 106, 3823, 6210, 6212, 5125, 6293, 2272, 4511, 1029, 3427, 3444, 1791, 3263, 2822, 5413, 5484, 5488, 1887, 4721, 5181, 4214, 4313, 2128, 4396, 5967, 4213, 5807, 2049, 3648, 4687, 2697, 4864, 1985, 1862, 4294, 4692, 3739, 294, 2413, 202, 3328, 1341, 5153, 6439, 1408, 6067, 1913, 309, 5883, 1307, 2056, 2104, 5677, 3084, 5510, 3220, 6707, 6237, 2860, 1575, 1604, 3532, 4949, 1730, 2324, 3125, 1218, 5261, 6356, 1133, 5113, 4588, 4661, 1912, 5667, 5508, 5427, 4755, 4823, 4850, 4123, 2048, 244, 6469, 3899, 3768, 3865, 2861, 6192, 666, 4460, 4388, 6109, 3756, 3862, 4487, 6006, 3138, 5443, 6597, 6600, 2063, 844, 5198, 3898, 56, 4139, 6614, 4840, 1771, 2713, 4192, 3147, 4621, 5052, 2634, 3393, 3146, 1039, 486, 4620, 6612, 240]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -149.781021
nSV = 260
eliminating: [2270, 892, 5873, 5557, 6015, 4460, 3682, 5295, 5563, 5514, 6006, 2444, 553, 3477, 4547, 5243, 258, 2526, 1707, 406, 5120, 4944, 3793, 3087, 2197, 5492, 4260, 287, 1807, 1882, 1669, 1667, 5855, 2000, 4760, 3296, 4082, 1234, 5761, 1034, 5817, 2942, 404, 544, 1519, 4670, 660, 3140, 1148, 2580, 4477, 216, 4285, 358, 3311, 520, 2344, 4993, 979, 1995, 2175, 2856, 5316, 3890, 965, 322, 1227, 761, 3912, 4200, 2442, 1162, 2560, 3465, 3059, 2017, 4474, 4788, 5477, 33, 31, 4569, 4159, 3041, 5971, 2803, 1892, 5584, 2204, 4013, 136, 5413, 3936, 4340, 1932, 3330, 4100, 4718, 5143, 304, 5141, 605, 3638, 3226, 1556, 4170, 2753, 1116, 2379, 4721, 2332, 3717, 4811, 5963, 3805, 4702, 1406, 269, 1656, 1760, 5387, 4230, 2240, 2766, 706, 3423, 5193, 2915, 1520, 4368, 3551, 4576, 1051, 343, 4049, 75, 5277, 3268, 4816, 372, 3264, 5434, 3659, 421, 3240, 123, 5915, 3864, 4895, 1604, 4682, 3862, 5155, 1786, 1868, 4213, 1219, 491, 1094, 4901, 6021, 3786, 2048, 1044, 2392, 1647, 4272, 4585, 1981, 5020, 1137, 5011, 2115, 468, 1952, 3273, 1435, 367, 640, 2982, 3256, 5969, 127, 4470, 3849, 4503, 5636, 2136, 4564, 3112, 4011, 5064, 98, 1173, 2908, 5323, 34, 3042, 5100, 740, 4128, 1857, 5190, 396, 969, 3930, 4618, 5769, 2793, 147, 50, 3319, 4329, 1904, 3301, 3580, 4111, 71, 4926, 5161, 734, 2781, 5371, 2182, 2609, 2608, 4856, 2980, 4860, 4861, 214, 5704, 3261, 3450, 5549, 5593, 4945, 5028, 943, 5995, 2477, 4258, 1517, 2365, 1421, 3321, 3115, 3924, 5532, 5032, 373, 3649, 3478, 1203, 2375, 345, 4224, 2487, 5057, 1368, 4850, 463, 5455, 1832, 5382, 5482, 1739, 795, 4843, 4706, 344, 628, 1078, 226, 5646, 4353, 5207, 151, 4962, 4743, 1524, 1950, 4680, 73, 2903, 3151, 595, 3749, 963, 5635, 4005, 3287, 5803, 4250, 4971, 1697, 5203, 4354, 1422, 1896, 2011, 5042, 3493, 1968, 38, 103, 4086, 5441, 953, 5665, 5331, 1765, 1915, 1767, 2181, 4085, 4669, 3960, 5330, 2690, 2574, 4485, 2461, 2581, 1628, 2630, 5199, 1436, 3156, 1575, 3955, 2486, 4933, 3577, 5466, 2987, 949, 4292, 4559, 5900, 5588, 5533, 1661, 179, 3148, 4549, 1204, 1852, 5861, 4225, 4069, 275, 2398, 3646, 3368, 5010, 4717, 1505, 4914, 1045, 348, 2114, 3029, 5569, 1133, 5787, 138, 3203, 812, 5435, 4627, 759, 2859, 5266, 1495, 3023, 3234, 2741, 4518, 1638, 490, 3400, 1912, 502, 1442, 1188, 2833, 2310, 776, 2163, 4633, 1823, 253, 572, 2297, 533, 2380, 4878, 1846, 3615, 4964, 4609, 1928, 5756, 4499, 2296, 447, 656, 1126, 4466, 5500, 3703, 2376, 829, 255, 3134, 1851, 254, 603, 5897, 1312, 2986, 4890, 2251, 515, 3426, 958, 5445, 2135, 4987, 97, 39, 2761, 2054, 1599, 3131, 2911, 3045, 5972, 1089, 349, 4604, 4763, 1809, 4076, 1098, 3385, 2647, 3917, 3027, 4745, 5346, 280, 994, 5940, 53, 1513, 5447, 2976, 2488, 5399, 1547, 4189, 3165, 1166, 2504, 1072, 4079, 4299, 872, 4098, 4935, 4714, 3731, 5400, 5106, 3631, 4865, 2267, 3207, 3166, 5417, 1114, 4039, 2193, 2508, 3217, 2093, 3487, 2499, 2868, 2587, 4256, 5250, 984, 4687, 3257, 903, 3044, 2064, 2965, 1330, 866, 2622, 1411, 2278, 3449, 5475, 1153, 3215, 2626, 3995, 1894, 12, 2801, 1571, 3393, 904, 2516, 2280, 1963, 908, 3116, 819, 1616, 5675, 3781, 2014, 5006, 4161, 3987, 2456, 3433, 880, 3448, 1899, 96, 878, 1887, 2641, 4623, 661, 4668, 664, 5854, 5043, 5879, 2006, 3427, 5074, 990, 2780, 2367, 3396, 596, 3567, 1124, 1472, 3505, 5341, 3513, 645, 3571, 4332, 5022, 1625, 4296, 1110, 690, 4773, 2166, 4122, 1004, 5611, 3463, 2934, 3322, 2579, 2256, 3127, 3871, 1574, 5550, 5201, 1702, 5079, 5859, 2691, 3437, 5677, 3766, 506, 3538, 5058, 5579, 2704, 352, 4607, 1268, 3919, 687, 5091, 505, 4606]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -160.837294
nSV = 256
eliminating: [1664, 5001, 130, 2221, 3917, 1639, 3977, 3989, 1549, 2234, 2242, 4128, 2849, 45, 4850, 3209, 2683, 2881, 1681, 1691, 2922, 294, 2003, 1979, 1894, 1888, 4215, 3774, 3809, 1742, 79, 3870, 5007, 3903, 472, 2391, 4082, 1045, 4636, 4612, 4609, 866, 837, 2988, 1040, 761, 1112, 4793, 731, 4341, 4340, 3392, 35, 706, 4295, 699, 2226, 679, 5216, 4515, 4695, 3699, 2795, 3212, 3924, 3364, 2577, 4348, 58, 3936, 3949, 1610, 3906, 388, 3518, 3754, 4191, 4701, 232, 1739, 3391, 2631, 1362, 1864, 4435, 4286, 4320, 1262, 4501, 2963, 2929, 4495, 4487, 4281, 5373, 1516, 859, 5212, 3204, 274, 3018, 111, 2395, 2934, 4162, 1534, 1995, 386, 4699, 4962, 4379, 1428, 4175, 1840, 1487, 4714, 3763, 1347, 793, 4089, 3400, 4637, 3024, 4160, 4845, 2161, 2580, 1673, 179, 3945, 4634, 108, 2857, 4333, 2706, 617, 2991, 102, 3284, 3210, 2691, 3509, 4037, 4060, 72, 1073, 1206, 869, 3686, 17, 254, 3744, 4422, 3665, 1401, 5415, 5379, 1115, 3512, 998, 4380, 183, 5337, 3068, 783, 5318, 4852, 567, 1952, 3715, 360, 3567, 640, 1465, 1026, 5118, 462, 2984, 391, 4597, 4791, 2671, 3298, 1770, 2783, 2782, 1976, 2823, 1050, 3882, 4610, 5267, 1417, 557, 657, 4933, 2902, 4038, 3848, 4890, 4497, 31, 1306, 2871, 94, 4820, 4375, 1576, 1377, 2828, 4369, 336, 2663, 1802, 992, 2893, 4032, 194, 3138, 588, 390, 392, 4649, 2318, 5422, 1711, 3451, 2309, 1027, 1963, 1024, 4164, 4986, 215, 2658, 2233, 3580, 1274, 2129, 3275, 981, 2150, 5420, 2380, 2379, 887, 2393, 1633, 3028, 4506, 1902, 3031, 5320, 4656, 3151, 3586, 2178, 61, 339, 5342, 4488, 1926, 3261, 2730, 1315, 4479, 4249, 4706, 1710, 2873, 3582, 1314, 3583, 789, 3589, 5022, 5238, 2930, 4486, 216, 1281, 1974, 222, 1283, 1577, 974, 2588, 2579, 4061, 1299, 4545, 2725, 3879, 2301, 3211, 2338, 4463, 4332, 3814, 4389, 4402, 2884, 3923, 3344, 3732, 1524, 3354, 4639, 5432, 2650, 91, 4922, 4000, 4983, 3498, 1536, 3308, 1514, 1387, 2356, 3061, 1273, 4142, 5036, 3955, 4471, 2841, 3467, 2852, 3638, 3224, 2755, 1030, 3804, 1467, 3406, 1392, 2689, 1669, 767, 2406, 3111, 5234, 5193, 1813, 4670, 3450, 394, 2781, 5257, 3859, 5423, 586, 2452, 114, 1598, 4523, 1097, 5314, 5241, 1863, 4468, 2455, 1114, 3434, 3525, 2943, 1838, 4703, 2429, 2426, 4555, 5385, 774, 4558, 90, 4553, 1102, 463, 945, 4528, 5362, 2112, 738, 587, 3404, 5159, 2826, 4532, 5313, 2170, 548, 349, 506, 414, 2159, 1424, 3532, 5404, 2915, 1406, 4355, 3872, 696, 4728, 753, 5315, 975, 3268, 1215, 4169, 1224, 2904, 5403, 1078, 3907, 3921, 3544, 2453, 3254, 2158, 3797, 5312, 3756, 499, 1007, 300, 894, 4630, 3626, 3107, 1233, 2877, 5014, 4011, 28, 651, 3100, 1257, 4895, 1982, 4025, 3724, 4411, 2305, 5214, 4073, 1699, 2673, 904, 927, 1385, 3886, 3858, 5062, 4719, 5064, 2370, 4454, 2932, 5191, 4033, 4504, 2215, 4041, 3568, 2891, 1530, 4936, 1541, 4835, 4984, 1761, 2262, 3135, 2829, 2320, 93, 858, 2263, 3183, 4673, 2550, 1805, 2888, 5179, 3136, 3137, 4520, 1591, 2045, 4530, 1706, 2892, 2666, 358, 3596, 1579, 3296, 1140, 1654, 2715, 19, 838, 4531, 89, 4559, 3052, 1013, 1309, 1011, 1814, 84, 1806, 1622, 4552, 802, 4533, 4206, 5119, 1858, 2329, 4828, 1578, 3598, 4763, 2931, 4519, 5425, 4556, 2343, 2775, 2428, 5063, 3857, 736, 969, 2643, 4474, 4076, 576, 3779, 3826, 3647]
training using liblinear
solver 1
.*
optimization finished, #iter = 11
Objective value = -167.322577
nSV = 255
eliminating: [3091, 1953, 1861, 716, 3241, 2566, 2422, 1852, 3847, 2718, 682, 1372, 162, 3153, 1114, 4313, 977, 1995, 3771, 622, 2368, 4204, 699, 3938, 1461, 3449, 1447, 2191, 1312, 3028, 3221, 3457, 1613, 3751, 90, 4726, 2973, 259, 1962, 3936, 4554, 4164, 957, 1874, 2364, 4084, 729, 2766, 3466, 2565, 1937, 3230, 1857, 3717, 1555, 1085, 3807, 206, 3709, 3175, 2461, 3704, 1692, 3144, 3727, 1152, 744, 631, 2286, 2948, 3375, 455, 3086, 446, 1074, 4026, 2588, 1090, 4515, 174, 2964, 3571, 267, 3665, 3780, 3255, 2103, 697, 4538, 2080, 3470, 877, 4864, 4038, 4034, 1480, 272, 4688, 358, 719, 525, 2282, 1410, 175, 209, 2361, 3061, 2168, 3635, 2823, 3689, 3977, 544, 1999, 1428, 2033, 3600, 4521, 2954, 4180, 2125, 644, 2395, 2121, 1529, 4503, 3290, 3188, 3816, 2309, 482, 3990, 2905, 3088, 4414, 2508, 3187, 1996, 453, 3603, 4583, 4416, 4721, 3428, 2442, 124, 2359, 339, 782, 4568, 753, 3143, 4000, 4434, 4306, 931, 1153, 168, 4765, 4301, 4632, 4194, 2949, 4436, 1843, 3613, 3612, 1779, 2007, 2606, 1812, 1763, 4156, 4698, 136, 698, 3602, 1019, 2343, 4584, 119, 3926, 470, 3041, 618, 2978, 1840, 4281, 4484, 2322, 1921, 2467, 4177, 4640, 3968, 4346, 4226, 1054, 4333, 3894, 4047, 4482, 4175, 308, 305, 1155, 2294, 3716, 3738, 2548, 4398, 1925, 1244, 4675, 2848, 2097, 2802, 4192, 2791, 1376, 2489, 740, 2871, 558, 66, 2352, 148, 1067, 447, 3262, 2886, 3972, 2474, 2614, 2486, 492, 4248, 4660, 255, 3282, 2415, 3035, 2233, 1725, 4190, 170, 1723, 4845, 111, 1712, 3758, 2206, 1118, 4827, 2574, 4189, 2671, 3855, 4427, 4737, 3081, 1919, 1336, 3634, 1156, 448, 1443, 319, 3126, 3722, 460, 1263, 615, 1487, 3196, 1107, 1686, 4661, 665, 4441, 1235, 1760, 809, 2436, 430, 4494, 1629, 955, 4511, 4095, 4794, 2200, 2114, 1891, 2767, 2019, 4762, 775, 2316, 172, 2400, 1305, 535, 3643, 2289, 326, 1098, 4335, 1181, 1832, 4854, 2126, 3156, 343, 286, 3616, 2413, 169, 45, 4831, 16, 3391, 599, 4713, 1021, 4432, 2630, 3352, 659, 1653, 1366, 2632, 4491, 4410, 4666, 557, 368, 4798, 1705, 2751, 4627, 4066, 688, 366, 1102, 3710, 1941, 1616, 3667, 108, 4654, 1958, 3367, 354, 2095, 4073, 3024, 2811, 268, 4534, 4833, 1148, 2123, 200, 4029, 3775, 3831, 2669, 3219, 499, 3339, 580, 3759, 2188, 4352, 1612, 265, 4804, 4070, 2698, 2130, 4284, 4596, 2433, 4840, 4134, 347, 3880, 2468, 1860, 533, 2399, 2201, 680, 803, 2561, 2476, 1104, 2608, 3556, 3380, 4532, 4722, 3065, 3092, 3195, 3545, 1821, 3627, 1982, 1290, 3074, 685, 869, 2665, 3522, 3105, 4381, 4117, 4350, 3578, 3672, 85, 63, 380, 1887, 50, 4683, 2592, 1766, 4205, 1408, 1422, 4689, 3802, 1251, 2085, 2587, 4389, 2750, 3963, 331, 1721, 4486, 3974, 1479, 3265, 3985, 4384, 926, 2787, 4377, 2832, 2042, 953, 3763, 2356, 314, 3454, 1883, 3147, 1813, 1215, 1649, 3764, 3138, 1655, 3101, 2892, 1488, 362, 1172, 3588, 123, 1446, 4351, 3142, 1793, 609, 2358, 1576, 1208, 1064, 1254, 4810, 167, 2273, 4790, 2291]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -175.981104
nSV = 255
eliminating: [2634, 1823, 1990, 3578, 3171, 1148, 1320, 4327, 2960, 1266, 1965, 3718, 1561, 3381, 4215, 1286, 828, 4365, 760, 744, 3738, 1091, 1073, 117, 3608, 1101, 743, 4036, 1800, 3371, 2485, 2992, 1120, 1732, 4272, 3338, 2298, 2787, 287, 622, 445, 3733, 4131, 3781, 1119, 4342, 3759, 231, 3401, 2980, 1778, 1203, 1975, 3036, 2019, 963, 765, 573, 2722, 3688, 320, 1011, 24, 1005, 1030, 2528, 3366, 135, 4051, 886, 1624, 4352, 1209, 1702, 1683, 2505, 2449, 596, 1447, 2232, 4122, 4028, 2266, 2313, 2269, 2911, 3694, 1588, 1356, 4128, 2201, 3634, 3299, 2964, 2068, 2944, 1405, 581, 3190, 3638, 1202, 210, 3047, 1889, 2769, 2015, 221, 1425, 54, 2052, 1816, 4162, 859, 2667, 2006, 1353, 779, 1553, 671, 3934, 2740, 194, 4042, 756, 2238, 504, 4217, 2079, 2390, 4081, 68, 3664, 3011, 2350, 4109, 1789, 2174, 4315, 2239, 152, 825, 2057, 25, 1734, 1243, 809, 1225, 1613, 1499, 345, 2440, 3383, 2409, 2558, 3847, 4343, 1981, 1127, 4205, 3346, 3494, 3749, 188, 2144, 3496, 3315, 2800, 2943, 109, 972, 971, 3924, 3317, 1349, 893, 3013, 1306, 264, 2958, 1113, 2731, 661, 2611, 2275, 2306, 55, 4030, 4123, 2347, 1947, 170, 1155, 9, 1485, 3152, 3625, 4258, 2547, 694, 3884, 4112, 916, 4294, 4231, 974, 4376, 701, 2822, 2276, 1190, 2880, 3930, 1491, 1072, 3101, 197, 196, 4397, 1021, 3373, 1194, 40, 517, 1245, 3825, 1244, 2190, 173, 2583, 3767, 3581, 1832, 2153, 1834, 1195, 3535, 798, 3001, 3882, 3698, 1902, 533, 3292, 3655, 2362, 3704, 527, 4091, 2453, 2504, 2587, 3852, 1179, 1050, 1461, 141, 291, 1234, 123, 3727, 2045, 3332, 1081, 2111, 1887, 2150, 211, 3633, 490, 3313, 204, 3936, 4070, 3920, 1806, 295, 1084, 3668, 352, 3083, 2060, 602, 1558, 3388, 376, 1955, 4144, 377, 183, 1770, 2314, 1175, 2086, 1138, 2625, 507, 1489, 508, 2257, 3593, 3169, 2533, 2624, 3592, 1979, 3415, 2663, 563, 2256, 3032, 3791, 1664, 1859, 2976, 3641, 2375, 3128, 3866, 591, 3094, 3984, 3963, 2817, 3619, 2816, 4313, 2181, 2695, 1189, 695, 1779, 3418, 260, 60, 3108, 3283, 2664, 3555, 327, 3405, 3402, 2480, 832, 925, 770, 1167, 462, 1693, 2681, 1692, 2095, 547, 1215, 2316, 1994, 2407, 2574, 400, 460, 2629, 2655, 540, 2373, 3300, 1029, 3728, 3197, 467, 2563, 20, 437, 1102, 3272, 1536, 79, 3343, 2083, 734, 2466, 406, 3342, 3163, 4235, 3968, 2559, 1059, 3610, 2318, 2044, 3228, 3868, 226, 2420, 2112, 1971, 3577, 2148, 3611, 2835, 3003, 1300, 2759, 2424, 296, 2855, 3707, 3857, 4367, 4350, 3021, 3809, 81, 3659, 1160, 3613, 1815, 321, 2135, 107, 2009, 975, 1506, 534, 497, 496, 202, 2230, 690, 861, 3086, 2876, 1766, 2723, 2669, 116, 856, 2927, 387, 1273, 4309]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -185.374431
nSV = 257
eliminating: [218, 15, 1836, 2043, 3624, 3593, 529, 36, 149, 1609, 1666, 147, 1632, 2255, 2288, 2271, 2648, 1287, 1419, 1773, 2852, 3494, 2782, 1780, 3512, 2663, 3527, 900, 495, 2588, 787, 1488, 124, 2277, 166, 3916, 1700, 698, 2706, 2775, 1890, 1254, 199, 3271, 2655, 2006, 245, 725, 387, 2774, 1423, 1556, 485, 28, 18, 2948, 1613, 1557, 2755, 2467, 1618, 3338, 2911, 2711, 3378, 3701, 3851, 981, 2970, 27, 2187, 733, 2867, 1088, 2181, 1316, 2332, 3579, 3173, 3324, 2422, 882, 1866, 1749, 3682, 73, 1492, 1538, 3648, 2858, 1620, 2230, 1447, 3256, 1062, 1047, 1101, 1087, 2390, 46, 853, 1957, 1363, 3002, 1506, 1233, 1176, 188, 1877, 3046, 969, 2789, 524, 2791, 48, 542, 3296, 2209, 3331, 3403, 439, 2475, 1175, 3599, 2040, 1798, 3511, 848, 781, 1795, 677, 1147, 2683, 2641, 1336, 3243, 3052, 1218, 1603, 380, 597, 2194, 3531, 3410, 19, 2387, 93, 3540, 58, 3961, 2570, 2463, 263, 3765, 572, 2250, 156, 3199, 2978, 2500, 2704, 3213, 1143, 1830, 1343, 2403, 3838, 3358, 2146, 2932, 3670, 1414, 2318, 1575, 1605, 3557, 3085, 1358, 1747, 2201, 480, 744, 929, 3685, 252, 3707, 3753, 3292, 3912, 1789, 1672, 2962, 1290, 2037, 905, 2862, 2893, 3036, 493, 448, 1785, 2784, 110, 3461, 821, 2933, 1984, 3805, 1925, 3369, 1474, 3143, 2198, 3058, 1106, 1843, 3070, 3066, 3910, 3771, 1783, 3203, 2017, 70, 925, 3012, 2843, 76, 3190, 3813, 3397, 3595, 1945, 1636, 1495, 1182, 1509, 2063, 2269, 1232, 1005, 219, 2502, 3349, 479, 2612, 398, 1009, 2939, 3947, 3050, 1658, 2447, 2458, 87, 2108, 3068, 1870, 2938, 3381, 3603, 2389, 1331, 2336, 1141, 1042, 2395, 786, 77, 1916, 2400, 2169, 2976, 815, 79, 312, 1897, 3418, 940, 1461, 776, 2983, 3481, 1301, 3281, 1584, 1464, 158, 1072, 2587, 512, 1010, 3061, 2053, 3784, 1765, 2488, 260, 870, 3370, 1314, 3587, 3460, 1357, 1086, 268, 670, 1964, 148, 1967, 2014, 2530, 271, 856, 3719, 616, 939, 1608, 39, 2166, 2325, 354, 852, 3109, 392, 3100, 435, 478, 866, 879, 205, 2865, 1995, 2981, 2065, 2794, 3478, 2454, 1928, 3510, 2439, 942, 3738, 91, 2397, 831, 2094, 3323, 1690, 555, 102, 645, 1230, 2925, 489, 1221, 3712, 1824, 3509, 1775, 2476, 3161, 1902, 2633, 2084, 127, 3543, 1040, 117, 202, 2218, 783, 599, 2809, 535, 3668, 302, 3040, 1305, 1385, 3133, 1693, 2361, 2007, 3433, 2363, 1844, 3698, 3032, 2591, 814, 2667, 3076, 2331, 3600, 3782]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -195.778088
nSV = 258
eliminating: [2482, 2183, 2127, 1903, 589, 3071, 1204, 3324, 2451, 2478, 23, 1736, 758, 1592, 1721, 1177, 2265, 2322, 2558, 2255, 3391, 3215, 2250, 1979, 2568, 1446, 812, 481, 118, 3046, 2870, 3050, 2460, 2717, 1870, 376, 1748, 3485, 762, 75, 2837, 113, 433, 17, 445, 2356, 761, 3555, 1551, 1083, 1935, 2911, 3278, 657, 1795, 1737, 373, 1410, 928, 1420, 3453, 2897, 3039, 10, 3403, 3378, 2646, 418, 1054, 786, 3121, 1272, 1798, 2709, 2544, 566, 2351, 2817, 1417, 1221, 3038, 3041, 1267, 1681, 2612, 2583, 2691, 3191, 79, 70, 450, 1149, 319, 2739, 2293, 116, 1396, 2685, 2686, 1398, 1070, 177, 1262, 3099, 723, 731, 3084, 732, 3023, 3287, 1907, 644, 1599, 565, 3012, 3087, 2025, 3519, 899, 473, 412, 1364, 2022, 1573, 2084, 3454, 1141, 3455, 1767, 1766, 469, 372, 2971, 567, 502, 3228, 1840, 2104, 25, 618, 1438, 2554, 701, 1790, 36, 2158, 2312, 932, 2913, 429, 2947, 1594, 2922, 2196, 122, 1564, 1412, 3311, 2828, 3052, 1350, 2353, 2261, 2620, 3001, 2249, 243, 3203, 910, 628, 451, 66, 1338, 420, 931, 370, 1341, 2274, 3346, 2852, 759, 1443, 546, 2792, 614, 92, 2923, 2276, 304, 2152, 1637, 734, 2733, 813, 2848, 3205, 2660, 2676, 1623, 1857, 2758, 2760, 1170, 388, 835, 847, 1535, 2417, 1557, 401, 1051, 1044, 2226, 2999, 86, 2784, 735, 87, 1974, 694, 1234, 1366, 671, 3194, 2701, 217, 432, 1908, 120, 1732, 2798, 2260, 2652, 100, 1917, 2118, 232, 3387, 771, 1821, 2045, 1174, 989, 490, 3348, 1739, 906, 128, 3313, 1562, 1899, 3525, 3042, 54, 834, 2079, 3427, 3503, 2621, 1819, 1439, 190, 3544, 1238, 2508, 1074, 2671, 313, 213, 3369, 3470, 1228, 3481, 2611, 2601, 2949, 2214, 69, 453, 78, 2201, 576, 1672, 119, 519, 3073, 3036, 71, 315, 3491, 616, 3547, 132, 138, 1285, 2359, 494, 1145, 2458, 160, 1146, 1034, 2444, 240, 3521, 776, 2730, 530, 3394, 1284, 2641, 1530, 798, 2662, 2867, 1720, 311, 975, 2372, 97, 2245, 687, 2308, 2683, 1998, 704, 1227, 3238, 1970, 178, 2749, 1458, 235, 2856, 3016, 265, 197, 1694, 1295, 3021, 2790, 2787, 2119, 1018, 2382, 3423, 3107, 626, 105, 1021, 2841, 159, 2216, 459, 1104, 788, 3498]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -203.866234
nSV = 259
eliminating: [1810, 2332, 2475, 2567, 3048, 3133, 2898, 462, 947, 3071, 396, 3055, 1534, 1701, 2359, 1682, 975, 562, 59, 1017, 1281, 726, 2621, 2725, 2482, 3150, 1908, 619, 1079, 904, 1424, 2810, 1689, 261, 60, 61, 1997, 1150, 1330, 133, 2831, 2260, 2829, 1460, 1493, 2140, 1872, 3161, 1394, 35, 1452, 163, 2420, 176, 2649, 328, 715, 774, 2755, 2360, 2154, 2518, 2706, 876, 537, 2551, 1712, 2310, 1433, 2328, 2403, 3170, 119, 1787, 2235, 1454, 1906, 2288, 347, 2295, 804, 743, 3039, 2620, 570, 1367, 2174, 2749, 351, 979, 2893, 492, 1940, 2568, 2252, 1114, 483, 2189, 456, 2081, 2786, 217, 971, 549, 288, 1565, 2494, 985, 2972, 845, 817, 2043, 179, 2711, 1410, 2995, 448, 1866, 3165, 3168, 1829, 1516, 1503, 791, 196, 2168, 290, 2314, 2313, 475, 1338, 792, 2484, 1907, 461, 2437, 211, 212, 2730, 2267, 952, 2351, 1532, 2202, 1899, 1140, 672, 2036, 1860, 3068, 2352, 942, 1409, 2095, 254, 2086, 2552, 3014, 687, 2564, 2311, 76, 3109, 304, 1562, 1444, 2165, 2017, 874, 2587, 2992, 1684, 459, 2141, 451, 300, 83, 2246, 967, 3153, 324, 2137, 1633, 458, 2823, 1328, 108, 1992, 1512, 1538, 2680, 1740, 686, 591, 872, 205, 2533, 2867, 2875, 605, 797, 2396, 2889, 1756, 488, 1763, 1110, 105, 682, 948, 2078, 933, 2569, 178, 2773, 794, 1392, 704, 703, 722, 1836, 238, 1072, 1536, 553, 2821, 2777, 1104, 89, 873, 455, 964, 2218, 2643, 2287, 3081, 3169, 1066, 2723, 664, 2791, 1796, 239, 1828, 447, 1405, 1515, 1708, 813, 3005, 188, 1136, 2073, 1609, 1964, 2293, 2506, 2380, 2255, 3204, 3158, 1016, 2559, 3059, 2861, 454, 1218, 1568, 2486, 3108, 2739, 2973, 2193, 2277, 2583, 3144, 265, 982, 1576, 1096, 339, 2447, 2144, 1936, 668, 64, 378, 2617, 698, 1849, 541, 613, 1644, 2324, 626, 2572, 2264, 1666, 2641, 1615, 2943, 2217, 2868, 3037, 2152, 1234, 234, 659, 2772, 1227, 2708, 2707, 1741, 1545, 85, 2286, 245, 2665, 579, 701, 413]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -211.076417
nSV = 258
eliminating: [1781, 1031, 454, 281, 313, 360, 2465, 119, 327, 2755, 1886, 934, 1970, 2171, 1911, 2434, 2506, 2635, 641, 867, 1661, 2314, 1172, 471, 1902, 2291, 1695, 14, 1971, 2179, 1954, 68, 2049, 2455, 2153, 75, 2825, 1950, 223, 2178, 2108, 1046, 1515, 149, 626, 182, 2109, 21, 1049, 1301, 1266, 707, 2856, 1457, 2135, 636, 399, 2318, 704, 2405, 1079, 2831, 2829, 190, 1803, 2633, 177, 2114, 2690, 1402, 672, 1404, 2845, 273, 1467, 221, 1668, 2008, 871, 873, 854, 325, 1617, 1321, 2051, 503, 333, 1550, 654, 851, 1204, 1316, 2525, 1795, 1838, 431, 2636, 603, 776, 1555, 1343, 56, 166, 1799, 2189, 33, 2529, 1953, 2765, 849, 1918, 982, 23, 530, 1106, 1373, 633, 1206, 1673, 1233, 157, 1709, 2003, 2620, 506, 779, 1434, 2214, 1096, 1903, 1147, 745, 234, 204, 2308, 1071, 251, 1956, 1559, 911, 242, 2221, 1468, 1804, 346, 1491, 997, 730, 2295, 2309, 2783, 782, 946, 1666, 1986, 1029, 2868, 2630, 2473, 2718, 440, 2030, 2200, 2322, 367, 2569, 2571, 830, 2695, 209, 1560, 650, 2316, 2767, 528, 2195, 1968, 2048, 233, 517, 237, 343, 38, 1976, 1753, 1792, 112, 1463, 2399, 874, 2719, 283, 2369, 538, 744, 2385, 1507, 2163, 2888, 1810, 473, 2164, 482, 2703, 1509, 57, 1454, 1651, 718, 1755, 148, 1345, 1571, 2659, 1406, 959, 909, 2270, 303, 958, 308, 2175, 678, 463, 1098, 2543, 1293, 2618, 624, 1757, 298, 405, 1382, 810, 1334, 130, 2749, 2647, 205, 261, 2176, 444, 574, 2730, 1167, 1671, 2378, 581, 2541, 1840, 1155, 932, 2055, 700, 2140, 1003, 2501, 2451, 1541, 2349, 2844, 991, 967, 2615, 1540, 1288, 1669, 2242, 2590, 1000, 2267, 1907, 1389, 2213, 2300, 1575, 568, 824, 894, 1687, 1114, 565, 206, 2578, 2598, 562, 2431, 2028, 2223]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -220.616678
nSV = 256
eliminating: [277, 1947, 684, 49, 369, 2236, 1020, 1157, 116, 1476, 1411, 811, 2028, 1247, 611, 1208, 1102, 1793, 135, 1427, 1104, 2141, 1760, 1394, 1945, 1777, 121, 2323, 101, 2390, 2400, 2192, 189, 1362, 230, 1449, 321, 2042, 1711, 1761, 1850, 160, 231, 490, 986, 2544, 15, 347, 1304, 606, 947, 876, 1903, 2555, 2277, 1875, 420, 1752, 1461, 797, 1687, 439, 2247, 981, 817, 2124, 1837, 626, 2069, 1458, 887, 1364, 1978, 2368, 1776, 1462, 178, 1880, 836, 2041, 642, 2196, 1923, 68, 1753, 2010, 1013, 2102, 2156, 2204, 2071, 935, 1032, 1485, 814, 1533, 1596, 644, 731, 2585, 397, 672, 2324, 1334, 530, 133, 262, 1772, 272, 2107, 1968, 892, 1297, 147, 474, 198, 1954, 1228, 604, 349, 694, 1144, 1696, 482, 1871, 387, 1981, 2299, 1284, 1740, 595, 50, 2387, 931, 1384, 83, 1736, 252, 2374, 739, 1054, 2216, 2308, 2174, 66, 2106, 2187, 1934, 1645, 1488, 1656, 1634, 2586, 1255, 732, 1516, 1014, 485, 2593, 479, 843, 759, 1660, 2006, 570, 652, 431, 298, 557, 632, 842, 1168, 2474, 1848, 1621, 2221, 1969, 893, 2601, 1722, 95, 2491, 1524, 1053, 36, 2417, 2126, 35, 2170, 185, 2140, 60, 1813, 2363, 2096, 2125, 1057, 1495, 635, 243, 2451, 774, 772, 2064, 1219, 288, 91, 1034, 1273, 1317, 2479, 2109, 2530, 751, 2513, 1279, 2135, 1435, 2515, 351, 1117, 484, 544, 1872, 2110, 2233, 514, 1557, 1367, 957, 2098, 2094, 1061, 1285, 2359, 973, 1118, 2217, 2295, 1992, 1979, 2287, 2011, 818, 212, 1966, 1964, 1628, 563, 1217, 1494, 565, 78, 1830, 1786, 1574, 2450, 1705, 2480, 97]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -230.942329
nSV = 256
eliminating: [5, 1414, 997, 890, 349, 2039, 940, 2219, 1213, 1953, 1320, 1503, 1986, 1526, 1556, 239, 2196, 280, 2112, 601, 1529, 2080, 1667, 263, 1991, 79, 2154, 1379, 2204, 2257, 902, 1863, 1657, 698, 1997, 1435, 1695, 1473, 457, 1072, 2073, 81, 653, 253, 2002, 825, 1330, 1080, 1366, 1020, 588, 362, 1223, 1768, 64, 1849, 2139, 203, 1189, 2153, 1195, 1740, 574, 450, 1770, 1396, 936, 163, 944, 244, 795, 1442, 2042, 1926, 633, 2180, 1981, 673, 1527, 950, 1227, 865, 1552, 1301, 56, 2094, 226, 256, 1623, 551, 1716, 1874, 1204, 155, 2175, 143, 1726, 1152, 416, 426, 945, 446, 1596, 1565, 959, 910, 907, 675, 543, 1977, 1047, 1201, 1671, 597, 1672, 469, 1985, 1893, 1480, 1475, 2054, 798, 1898, 1908, 2041, 1945, 1289, 267, 645, 1679, 2315, 955, 53, 1068, 2242, 1012, 78, 2260, 75, 1105, 343, 908, 1096, 1570, 1472, 2308, 1524, 1737, 164, 1084, 273, 2210, 1119, 2162, 185, 156, 1071, 1497, 394, 1532, 1252, 311, 640, 1452, 973, 2271, 772, 1983, 275, 493, 403, 1141, 321, 1714, 1065, 146, 88, 1881, 201, 1862, 582, 2035, 1303, 1727, 2047, 1249, 1271, 1000, 717, 1887, 1724, 2310, 1561, 1662, 1678, 1410, 2311, 1952, 2298, 1294, 2156, 96, 240, 1528, 2340, 895, 1007, 1507, 1217, 57, 198, 864, 1130, 1428, 1633, 1368, 1283, 433, 385, 1928, 2055, 2085, 2120, 117, 1660, 1462, 583, 2118, 1247, 1397, 1391, 1797, 2056, 2100]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -239.149715
nSV = 254
eliminating: [944, 336, 101, 265, 189, 40, 314, 1975, 1984, 527, 1971, 1687, 1652, 746, 948, 526, 1646, 1660, 1675, 2052, 1688, 814, 817, 418, 1750, 1763, 1240, 1228, 308, 887, 1680, 512, 1192, 1130, 595, 1035, 1037, 2074, 561, 1603, 417, 923, 217, 427, 1411, 1892, 1699, 1567, 548, 2014, 684, 596, 103, 850, 304, 539, 2009, 192, 86, 1432, 1221, 1162, 1990, 1121, 288, 95, 818, 1676, 1319, 3, 1295, 1142, 1026, 202, 1831, 1743, 966, 229, 1449, 1423, 203, 1112, 310, 1402, 1354, 453, 490, 363, 1105, 162, 1439, 1916, 559, 905, 1625, 245, 734, 918, 1119, 401, 92, 1484, 1546, 563, 1348, 42, 1187, 410, 1307, 975, 891, 350, 388, 1075, 686, 1928, 1732, 1577, 1612, 382, 1987, 2068, 1730, 1663, 1306, 393, 1985, 1161, 1719, 1074, 1455, 497, 567, 1503, 1437, 65, 271, 1386, 1334, 383, 1899, 1887, 1565, 1335, 1215, 2020, 1539, 151, 620, 261, 1490, 1927, 284, 1050, 1697, 509, 1980, 589, 960, 438, 133, 1116, 1475, 1163, 606, 521, 1254, 1364, 997, 1951, 659, 1821, 264, 2008, 480, 1055, 989, 200, 1466, 806, 922, 367, 87, 2037, 1783, 654, 62, 652, 1967, 2033, 319, 1280, 1511, 1477, 1715, 74, 78, 667, 1379, 1164, 340, 612, 1938, 1863, 153, 241, 538, 1723, 399, 582, 1816]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -249.496039
nSV = 254
eliminating: [473, 833, 1485, 486, 1793, 553, 777, 1161, 487, 809, 1334, 883, 885, 411, 365, 362, 650, 1412, 252, 1268, 1749, 1824, 0, 933, 911, 814, 447, 394, 442, 384, 611, 1583, 1023, 1522, 775, 1808, 1513, 1650, 656, 1565, 900, 745, 1317, 1382, 1306, 1305, 159, 437, 149, 1747, 1870, 1414, 1684, 108, 1599, 1406, 1644, 1077, 363, 1724, 1150, 574, 1894, 1028, 1829, 506, 860, 1204, 1198, 1286, 332, 1568, 997, 1651, 1504, 240, 1180, 1386, 630, 1755, 1730, 472, 551, 644, 490, 1728, 1335, 1645, 218, 1848, 874, 1303, 1271, 410, 1294, 682, 1638, 1871, 1391, 496, 534, 30, 1176, 383, 891, 1230, 672, 257, 1240, 1215, 1823, 546, 722, 1404, 702, 970, 799, 1575, 1016, 1700, 239, 1802, 573, 1489, 1062, 648, 1756, 1727, 846, 1889, 1232, 1742, 1362, 217, 1289, 413, 863, 43, 1178, 1685, 370, 312, 331, 1604, 184, 333, 242, 1528, 1095, 1496, 607, 781, 1422, 399, 438, 185, 1669, 533, 1864, 125, 1860, 195, 731, 1657, 1662, 1291, 1093, 385, 207, 378, 854, 1191, 1397, 996, 773, 1121, 420, 788, 675, 1461, 1004, 1472, 1233, 172, 436, 1482, 407, 1640, 1591]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -259.083978
nSV = 253
eliminating: [1489, 715, 279, 240, 33, 1581, 1250, 1041, 642, 247, 1324, 157, 638, 465, 1048, 1680, 836, 161, 1230, 698, 676, 320, 966, 723, 898, 918, 1431, 549, 1695, 1123, 1569, 1175, 126, 1579, 123, 752, 1656, 593, 692, 1459, 99, 328, 1432, 1009, 1574, 136, 49, 215, 895, 1064, 880, 288, 1300, 1305, 1253, 1019, 1124, 1356, 890, 873, 900, 1401, 1531, 1478, 1069, 1405, 1463, 624, 371, 375, 380, 386, 1384, 1273, 1694, 1199, 949, 1059, 951, 346, 1155, 627, 253, 1194, 912, 124, 743, 1681, 209, 1626, 505, 1425, 1538, 162, 178, 83, 376, 801, 1229, 1586, 350, 1424, 875, 336, 1628, 672, 333, 115, 930, 166, 1200, 73, 1573, 221, 789, 1484, 174, 981, 1015, 258, 284, 1301, 1045, 139, 893, 610, 589, 331, 1181, 351, 1355, 24, 1234, 26, 899, 1488, 520, 1400, 432, 792, 409, 533, 569, 1674, 1108, 1182, 897, 1042, 1465, 1313, 1466, 466, 17, 839, 815, 1426, 168, 216, 1090, 725, 261, 1076, 1572, 1457, 208, 76, 1326, 1150, 923, 1504, 1267]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -269.963519
nSV = 251
eliminating: [239, 5, 1175, 1110, 610, 765, 1142, 1017, 1262, 1508, 654, 162, 717, 999, 1318, 611, 1008, 959, 1208, 67, 849, 1245, 1255, 1394, 158, 1365, 608, 397, 1151, 653, 1490, 17, 997, 138, 451, 634, 768, 971, 1499, 62, 202, 886, 249, 1214, 1106, 1316, 338, 1497, 640, 106, 153, 981, 232, 991, 328, 182, 298, 39, 835, 1247, 50, 480, 1348, 1236, 281, 336, 1075, 1006, 144, 1528, 763, 257, 799, 732, 1407, 1149, 1217, 986, 141, 506, 299, 1511, 1257, 103, 943, 421, 1449, 273, 1195, 675, 1244, 180, 525, 1085, 1409, 1536, 1128, 933, 1509, 224, 1111, 389, 871, 1351, 155, 865, 1031, 1505, 69, 1018, 1423, 157, 147, 272, 1467, 935, 513, 511, 1277, 1173, 1466, 195, 1370, 900, 510, 24, 1391, 811, 1512, 914, 1192, 1268, 1515, 963, 316, 673, 1063, 769, 764, 25, 494, 629, 1402, 1204, 77, 1447, 1042, 173, 105, 330, 766, 597, 820]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -280.807739
nSV = 248
eliminating: [76, 54, 1049, 1020, 434, 94, 474, 716, 1208, 1189, 197, 1122, 613, 377, 498, 1355, 769, 652, 943, 859, 502, 93, 443, 96, 41, 773, 1050, 386, 1362, 65, 1274, 778, 1124, 247, 245, 1325, 1099, 1162, 240, 514, 416, 260, 356, 934, 650, 774, 132, 172, 108, 1247, 796, 1039, 591, 1311, 1346, 265, 125, 129, 735, 249, 79, 1261, 1235, 1238, 102, 592, 149, 339, 579, 338, 1288, 549, 960, 1326, 15, 925, 610, 432, 271, 1232, 277, 97, 757, 1239, 309, 1001, 14, 722, 221, 895, 258, 128, 137, 344, 1180, 85, 1138, 120, 767, 413, 683, 253, 1251, 662, 1344, 1278, 266, 572, 399, 257, 237, 779, 109, 794, 1206, 1018, 1105, 1081, 1082, 24, 555, 554, 362, 29, 342, 824, 1334, 766, 827, 551, 941, 1149, 910, 581, 477, 46, 641, 420]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -291.661716
nSV = 248
eliminating: [791, 492, 797, 749, 431, 1148, 671, 368, 70, 30, 1209, 732, 960, 638, 864, 337, 675, 676, 231, 128, 678, 1066, 413, 1097, 258, 899, 861, 717, 746, 1068, 355, 489, 1204, 808, 572, 703, 1152, 252, 336, 1102, 766, 1244, 684, 315, 456, 1015, 837, 872, 978, 929, 1236, 865, 566, 783, 944, 738, 759, 993, 1072, 736, 845, 21, 62, 46, 904, 991, 992, 884, 288, 873, 487, 628, 506, 939, 568, 555, 15, 150, 274, 1188, 841, 285, 268, 105, 1061, 712, 852, 204, 462, 474, 1141, 582, 614, 1080, 799, 1050, 1221, 308, 843, 981, 699, 540, 605, 88, 794, 320, 348, 353, 1215, 982, 55, 802, 144, 132, 844, 216, 1133, 310, 585, 660, 322, 925, 917, 972]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -300.841399
nSV = 245
eliminating: [254, 417, 922, 1058, 680, 838, 945, 273, 145, 977, 728, 809, 1062, 670, 525, 671, 507, 189, 89, 522, 160, 933, 999, 206, 1011, 79, 120, 207, 296, 1070, 942, 448, 51, 233, 1041, 662, 996, 395, 1051, 721, 755, 375, 760, 813, 667, 686, 138, 801, 441, 664, 843, 1063, 954, 737, 841, 74, 653, 298, 230, 1102, 385, 215, 266, 235, 17, 987, 54, 20, 352, 606, 22, 1045, 710, 916, 896, 371, 1042, 1010, 665, 619, 286, 282, 234, 616, 297, 695, 1031, 108, 634, 607, 75, 959, 781, 780, 1100, 48, 447, 462, 383, 989, 848, 707, 810, 196, 787, 826, 694, 44, 85, 1074, 278, 295]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -311.689469
nSV = 248
eliminating: [855, 886, 861, 482, 556, 91, 495, 570, 100, 376, 528, 582, 708, 559, 409, 417, 381, 595, 572, 199, 805, 876, 783, 544, 799, 231, 77, 981, 209, 553, 767, 933, 873, 768, 793, 176, 606, 340, 710, 82, 953, 727, 131, 833, 872, 415, 83, 306, 778, 537, 464, 690, 78, 352, 275, 522, 656, 863, 317, 465, 133, 157, 441, 984, 574, 364, 527, 882, 89, 90, 193, 821, 245, 832, 734, 230, 788, 716, 663, 715, 25, 575, 29, 670, 208, 707, 987, 949, 1009, 823, 704, 73, 934, 938, 931, 589, 168, 792, 686, 154, 403]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -324.210622
nSV = 245
eliminating: [818, 630, 227, 660, 406, 651, 238, 40, 759, 83, 866, 765, 540, 909, 211, 571, 903, 902, 243, 85, 838, 294, 37, 59, 46, 587, 32, 397, 474, 835, 385, 760, 201, 65, 890, 628, 425, 230, 753, 215, 553, 180, 813, 423, 248, 45, 814, 529, 616, 257, 28, 154, 534, 699, 867, 812, 242, 81, 664, 675, 732, 131, 106, 505, 659, 625, 25, 88, 427, 908, 609, 706, 600, 829, 750, 275, 689, 472, 100, 298, 782, 134, 476, 515, 809, 857, 611, 715, 703, 811, 305]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -337.124916
nSV = 246
eliminating: [508, 516, 361, 139, 163, 714, 136, 716, 322, 310, 634, 500, 76, 62, 550, 295, 587, 22, 152, 90, 495, 383, 269, 815, 157, 95, 281, 755, 92, 563, 441, 63, 671, 147, 636, 551, 703, 284, 397, 150, 684, 253, 432, 797, 710, 127, 759, 618, 666, 337, 273, 433, 782, 391, 652, 213, 169, 590, 453, 316, 368, 107, 569, 283, 728, 709, 13, 427, 78, 795, 442, 648, 214, 792, 72, 585, 189, 156, 58, 704, 629, 109]
training using liblinear
solver 1
.*
optimization finished, #iter = 11
Objective value = -347.797958
nSV = 246
eliminating: [496, 477, 108, 165, 734, 316, 112, 662, 523, 642, 300, 252, 179, 188, 110, 266, 696, 455, 536, 96, 362, 241, 61, 263, 652, 289, 661, 126, 659, 180, 432, 238, 689, 154, 410, 261, 342, 196, 169, 204, 639, 122, 607, 35, 544, 82, 74, 203, 425, 123, 117, 608, 697, 415, 124, 587, 365, 735, 101, 192, 150, 361, 15, 103, 580, 694, 568, 674, 436, 721, 185, 231, 690]
training using liblinear
solver 1
.*
optimization finished, #iter = 11
Objective value = -359.166780
nSV = 250
eliminating: [119, 445, 485, 1, 457, 336, 68, 589, 423, 439, 528, 594, 609, 544, 404, 402, 468, 139, 521, 643, 481, 82, 181, 177, 591, 63, 650, 16, 616, 577, 262, 20, 155, 58, 47, 411, 167, 369, 164, 207, 179, 421, 125, 312, 638, 51, 248, 482, 590, 538, 127, 294, 242, 585, 569, 507, 297, 23, 352, 143, 447, 158, 479, 57, 256, 578]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -371.043946
nSV = 249
eliminating: [447, 547, 356, 141, 374, 189, 400, 487, 62, 578, 42, 216, 219, 457, 441, 573, 412, 321, 542, 166, 125, 84, 284, 569, 327, 235, 85, 498, 163, 63, 369, 32, 331, 221, 246, 270, 286, 154, 502, 574, 443, 14, 6, 208, 133, 553, 419, 319, 525, 113, 323, 521, 466, 167, 146, 376, 175, 210, 351]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -383.758319
nSV = 245
eliminating: [151, 385, 300, 82, 6, 91, 372, 42, 527, 173, 54, 390, 190, 448, 451, 492, 241, 273, 404, 315, 58, 416, 422, 457, 400, 376, 465, 283, 57, 481, 433, 26, 92, 374, 530, 181, 263, 78, 56, 196, 423, 320, 116, 89, 335, 157, 236, 144, 312, 526, 403, 342, 43, 270]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -399.368604
nSV = 248
eliminating: [445, 458, 163, 377, 159, 304, 138, 260, 237, 235, 43, 236, 380, 161, 315, 177, 180, 309, 373, 333, 417, 150, 41, 412, 372, 91, 219, 257, 46, 390, 76, 220, 218, 245, 166, 82, 126, 479, 279, 338, 97, 49, 143, 334, 398, 17, 66, 35]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -413.676211
nSV = 249
eliminating: [252, 190, 112, 328, 386, 242, 59, 95, 87, 195, 133, 76, 90, 57, 94, 100, 128, 130, 437, 292, 179, 261, 230, 35, 393, 214, 417, 150, 54, 267, 336, 304, 144, 378, 46, 301, 305, 147, 248, 418, 364, 396, 222]
training using liblinear
solver 1
*.
optimization finished, #iter = 10
Objective value = -429.666981
nSV = 247
eliminating: [232, 376, 260, 251, 252, 6, 162, 358, 208, 243, 247, 100, 144, 98, 284, 70, 15, 328, 296, 203, 85, 292, 367, 273, 109, 175, 280, 161, 269, 226, 25, 99, 227, 293, 164, 308, 76, 394, 377]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -445.713826
nSV = 245
eliminating: [295, 236, 188, 246, 240, 8, 82, 56, 159, 136, 258, 338, 21, 61, 117, 212, 352, 129, 250, 286, 198, 150, 11, 304, 113, 98, 122, 67, 15, 107, 205, 62, 36, 192, 92]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -463.492878
nSV = 246
eliminating: [233, 93, 154, 87, 34, 153, 317, 290, 211, 199, 167, 84, 21, 89, 281, 240, 55, 203, 45, 27, 160, 54, 262, 193, 43, 17, 78, 244, 288, 107, 33, 278]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -483.827976
nSV = 250
eliminating: [21, 69, 8, 205, 96, 207, 36, 167, 227, 88, 31, 235, 240, 209, 94, 110, 126, 11, 261, 128, 277, 237, 253, 107, 206, 65, 203, 251]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -502.273143
nSV = 250
eliminating: [67, 56, 142, 240, 8, 58, 14, 228, 111, 122, 11, 186, 84, 49, 88, 126, 60, 22, 227, 218, 73, 121, 89, 182, 72, 48]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -521.487576
nSV = 249
eliminating: [227, 17, 126, 179, 211, 51, 134, 206, 202, 79, 109, 195, 32, 16, 14, 125, 77, 13, 185, 20, 119, 142, 88]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -541.027038
nSV = 248
eliminating: [76, 116, 139, 119, 110, 9, 90, 52, 24, 17, 153, 196, 127, 200, 198, 40, 11, 177, 53, 61, 93]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -560.856329
nSV = 248
eliminating: [101, 104, 133, 60, 19, 15, 184, 126, 120, 145, 150, 180, 148, 154, 50, 57, 176, 147, 149]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -582.345682
nSV = 247
eliminating: [28, 159, 86, 99, 145, 42, 36, 155, 166, 158, 151, 19, 81, 60, 161, 12, 57]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -603.980094
nSV = 248
eliminating: [41, 106, 7, 107, 80, 33, 96, 92, 71, 12, 109, 10, 78, 101, 62]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -624.159189
nSV = 248
eliminating: [90, 126, 97, 35, 25, 43, 22, 106, 29, 13, 136, 36, 4, 66]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -645.537518
nSV = 248
eliminating: [54, 111, 25, 73, 46, 17, 23, 122, 57, 96, 16, 104]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -664.425338
nSV = 251
eliminating: [88, 6, 34, 33, 58, 56, 4, 31, 7, 52, 10]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -685.155873
nSV = 249
eliminating: [50, 99, 101, 31, 77, 52, 32, 65, 33, 46]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -703.676731
nSV = 248
eliminating: [54, 6, 42, 75, 63, 53, 89, 64, 71]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -723.625042
nSV = 249
eliminating: [16, 7, 44, 45, 6, 67, 55, 5]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -742.295913
nSV = 248
eliminating: [39, 56, 51, 38, 19, 65, 60]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -758.907796
nSV = 248
eliminating: [24, 7, 17, 38, 54, 63]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -774.875688
nSV = 250
eliminating: [18, 42, 17, 61, 50, 14]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -794.549904
nSV = 251
eliminating: [32, 52, 8, 51, 44]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -812.736814
nSV = 248
eliminating: [49, 22, 50, 35, 44]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -830.770037
nSV = 250
eliminating: [19, 39, 5, 4]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -845.634902
nSV = 253
eliminating: [41, 15, 26, 40]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -860.925077
nSV = 254
eliminating: [36, 13, 35]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -873.035997
nSV = 254
eliminating: [16, 10, 20]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -889.451983
nSV = 256
eliminating: [26, 8, 6]
training using liblinear
solver 1
*
optimization finished, #iter = 9
Objective value = -902.955495
nSV = 256
eliminating: [24, 27, 2]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -921.385808
nSV = 258
eliminating: [9, 24]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -930.380737
nSV = 258
eliminating: [20, 6]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -939.621228
nSV = 258
eliminating: [12, 15]
training using liblinear
solver 1
*
optimization finished, #iter = 8
Objective value = -949.095382
nSV = 258
eliminating: [3]
Cpos, Cneg:  5.0 5.0
.*
optimization finished, #iter = 317
nu = 0.618169
obj = -504.641576, rho = 0.575858
nSV = 275, nBSV = 81
Weight vector
(7.7465082870026105, 'TTTATTT')
(7.15576338998655, 'TTATTTT')
(6.991510134525505, 'TTATTTA')
(6.868155965282991, 'TATTTAT')
(6.449456371516837, 'TATTATT')
(6.443806985439051, 'ATTTAAT')
(6.292416409909327, 'ATTTATT')
(5.796630438982394, 'TATTTAA')
(5.7433444750284925, 'CTATTTT')
(5.6476254689978855, 'ATTATTT')
(5.639320162206926, 'TTATTAT')
(5.57299773838254, 'TATTTTA')
(5.457207455731991, 'ATATTTA')
(4.987500144280951, 'TTATATT')
(4.860247079658891, 'TTTCATT')
(4.852883648374821, 'TATTTTT')
(4.818238131378688, 'TAATTTA')
(4.666754533402669, 'AATTTAT')
(4.530722316813993, 'ACTATTT')
(4.471795500240712, 'TTTATAT')
(4.462180061659518, 'TAATTAT')
(4.314726251982099, 'CTTTATT')
(4.262877139836773, 'TAATTTAT')
(4.169156539753892, 'ATTTAATT')
(4.0625391472300985, 'TTTATTA')
(3.919683447014827, 'TATTTAAT')
(3.9004548828925656, 'AATATTT')
(3.8915128698708763, 'TTTTCATT')
(3.874480349510641, 'TCTATTT')
(3.7687728202423303, 'ATTTATA')
(3.7687534727379854, 'ATTTTTT')
(3.750724164400653, 'CTTATTT')
(3.6759231432242574, 'TTTTTTT')
(3.576011697121207, 'TTTTTTA')
(3.5230972291432407, 'TTATTATT')
(3.4117893239471884, 'ATTTATC')
(3.3797145403045192, 'ACTTTAT')
(3.337761485890465, 'TTTAATTA')
(3.332344077196434, 'AATTTATT')
(3.27372231527871, 'TTTATTTA')
(3.234845352049151, 'TTTTATTT')
(3.216346506274359, 'TATTATTT')
(3.20805129214458, 'TAATATT')
(3.2016415215766623, 'TTAACTT')
(3.198448139456515, 'ATATTATT')
(3.177809221789519, 'CTATTTA')
(3.1304208363488026, 'TACTATTT')
(3.102014233658391, 'ATTATTTT')
(3.0832684294876467, 'AATTATT')
(3.03249569274614, 'ATTATATT')
(3.029444699643556, 'TATTTTTT')
(3.0286441838656124, 'TTTAGTA')
(3.0218291038297056, 'ATATTTAT')
(2.985847369957104, 'AATAATT')
(2.891849116129371, 'TTTATCT')
(2.8711446899540913, 'TAATTTATT')
(2.829204760356608, 'CTTTTTT')
(2.818341099386954, 'TTAGTAT')
(2.8021452676586587, 'TTTTAAA')
(2.7898285455661007, 'TATTTAATT')
(2.783478562486945, 'TTAAAAT')
(2.773142562399515, 'ATAATTT')
(2.73555380668614, 'TCTTTTT')
(2.706159805918391, 'TTTATTAT')
(2.6905442102186745, 'TAAATAT')
(2.6839409905928675, 'ATAATTA')
(2.6372991752665556, 'TACTTTT')
(2.6294399480888453, 'ATTATTA')
(2.5913814434836224, 'TTAATAT')
(2.583174984101638, 'TATTTTAT')
(2.569779341415245, 'CTTATTTT')
(2.561020439748906, 'TTTTAAT')
(2.5497675102434316, 'TATTTAG')
(2.507508417542542, 'ATATTTT')
(2.5018251191045393, 'CTATTTTT')
(2.4529483814371846, 'ATTTTTTT')
(2.4378107983285604, 'TCATTAT')
(2.4271576747671406, 'TTTAGTAT')
(2.4192125129755184, 'TTTCATTT')
(2.4033171722806275, 'ATATATA')
(2.399369771362986, 'CATTTAT')
(2.381146349649933, 'TATACTT')
(2.373953610476092, 'TTTAAAA')
(2.3723973146557373, 'TTTTTAA')
(2.3569172462063976, 'ATTATTTA')
(2.3516169967922202, 'TTTCTCT')
(2.34699845042259, 'TTTTTCAT')
(2.341963071207261, 'ACTTATTT')
(2.337971052365783, 'ATTTATCT')
(2.3171308677830895, 'TAATATTT')
(2.2907603594314923, 'TTTTTCATT')
(2.2875061858656753, 'ATATTCT')
(2.2796481482625786, 'ACTTATT')
(2.276043976801347, 'TAAAATT')
(2.2642337693927392, 'ATTTTATT')
(2.262184675896043, 'TTCTTTT')
(2.2543113544365307, 'TAAATAA')
(2.210279481769618, 'CCATATT')
(2.2033924211124774, 'ATAATAA')
(2.188630136840273, 'TAATCAT')
(2.1870321731724722, 'CATATTT')
(2.1847832079621585, 'TATCTTA')
(2.16330276764932, 'TTACTATTT')
(2.1204142090277385, 'TTATTTTA')
(2.115237987586405, 'TTACTTT')
(2.113310166420119, 'TTTAAAAT')
(2.111254941913223, 'TTAATTTA')
(2.099118883929852, 'ACATTTT')
(2.0878001827621366, 'TATATTG')
(2.083809813346252, 'TTTTAGT')
(2.0770312216374145, 'TTTTCTA')
(2.0760079912918203, 'TACATTT')
(2.0741195418714935, 'TTTAACT')
(2.0624360829263546, 'AATTTATTT')
(2.0574426327214512, 'TTCTAAT')
(2.0519564961462304, 'ATATTTTA')
(2.0453623136204273, 'TATTTATC')
(2.044208190722655, 'TATTTATA')
(2.030162865728231, 'TTACATT')
(2.0284844379310587, 'ACTTTATT')
(2.0230796259291153, 'AATAATTA')
(2.012588554576943, 'ATTATTG')
(2.0110647683322056, 'TAAATAC')
(2.001834363503605, 'TTTATATA')
(1.9993581942491898, 'CTATATT')
(1.9804587154864872, 'ATACTTA')
(1.9715154942177953, 'ATTAACT')
(1.944168589821949, 'TTTTAATT')
(1.943908225477811, 'TTCTATA')
(1.94063550215779, 'TCTATATT')
(1.929133323535731, 'TTTTCATTT')
(1.9279733091054352, 'CTTTATTA')
(1.9236388153617046, 'ACTTTTA')
(1.9058765962339907, 'TAAATTA')
(1.9051152649896719, 'TAATAATT')
(1.885033803653398, 'TCTATAT')
(1.872536453638577, 'TTACTTA')
(1.8503851841309364, 'TTTTAAAAT')
(1.846756999725197, 'TTATAAT')
(1.8454487266161816, 'TTCTATTT')
(1.8406807487934886, 'CTTTTTC')
(1.8227785531548193, 'AATATTA')
(1.820720921577015, 'ACTCTTA')
(1.8127723203281136, 'TTTTAAAA')
(1.8028371743887623, 'TAATTATA')
(1.7981305239746184, 'ATTTCTCT')
(1.7929518639001747, 'TACTTAT')
(1.789714398042133, 'TTTTTATTT')
(1.7889860106298263, 'AATTAGCT')
(1.7867023384511005, 'AACTTAA')
(1.7791904020330434, 'TTCTATT')
(1.7774255762984197, 'TTTATATAT')
(1.775984427559532, 'ATATATAT')
(1.763388049190882, 'AATTATA')
(1.7604968287085303, 'ACTATTTA')
(1.7516348609765653, 'ATTAGCT')
(1.7516348609765653, 'AATTAGC')
(1.749687731363374, 'ATTTCTC')
(1.7395550137905615, 'TTAAATT')
(1.7379228579454873, 'ATAATAAT')
(1.73750576609811, 'TAGTATT')
(1.7256394315772443, 'ATTTATTG')
(1.722248364808153, 'TTCTTTTT')
(1.7155290639941172, 'TATTTTTC')
(1.7107975300317957, 'CATTTAA')
(1.7055668756286295, 'ATACTTT')
(1.7050027769057625, 'ATTAAAT')
(1.6992053849296962, 'ATAATCATT')
(1.6975640449889489, 'ATTTTCATT')
(1.695538052001882, 'AAATAAT')
(1.6910162947571532, 'ATAATTAT')
(1.684472903132822, 'ATCTAAT')
(1.6824404447558179, 'CTATTTC')
(1.6676172725509706, 'ATTCTAAT')
(1.6651195347979568, 'TAATCATT')
(1.6651195347979568, 'ATAATCAT')
(1.6593031590731893, 'ATTTAATA')
(1.657593956880094, 'TATTACT')
(1.6575354283966992, 'ACATTTA')
(1.6543819895074559, 'TAATCTA')
(1.6524493263093816, 'ATTTATAT')
(1.6440975055523221, 'ATACTTAC')
(1.636366672188192, 'ATTCTAA')
(1.6330745812847178, 'ATAATCA')
(1.6330745812847178, 'AATCATT')
(1.6302893590702885, 'TACTTTTA')
(1.6148141841484571, 'ATTTATTTA')
(1.6091355534384468, 'ACTTAAT')
(1.6076883240052022, 'CCATATTT')
(1.606437583674019, 'TATTCTT')
(1.5981717664420072, 'TCTAATCT')
(1.596047228463344, 'TACTTAC')
(1.5953244121162278, 'TTCTCTT')
(1.5940621974097942, 'TTTAGATT')
(1.5921589849449829, 'ACTTACAT')
(1.5906064739585735, 'AATTTTATT')
(1.589826974230743, 'CCTATTTT')
(1.5854798147904567, 'GTATTTA')
(1.584342279212849, 'TTATTTAA')
(1.584248220426346, 'TTTATTTCT')
(1.5802287881052237, 'ATTACTA')
(1.5694925962471842, 'TCTAATC')
(1.5694925962471842, 'CTAATCT')
(1.5566204909441865, 'TCTCTTA')
(1.5492595731304646, 'AAATTTAG')
(1.5490730298070956, 'CCTATTT')
(1.5474622291126783, 'CTTACAT')
(1.5474622291126783, 'ACTTACA')
(1.5285715742323662, 'AATTTTAT')
(1.5117715891381596, 'TTTTTAAA')
(1.5043221777871536, 'TTTAGAT')
(1.4964445411951772, 'TATCTAT')
(1.487778672209609, 'ACCTATT')
(1.4746494174552058, 'TTAAACT')
(1.4720545990570886, 'AATTTTA')
(1.4634633587667207, 'AATTTAG')
(1.4600622449632363, 'TTTTATATA')
(1.459001652456342, 'CCTTTTT')
(1.4584428899439115, 'CTTATAT')
(1.4539846120447335, 'CCCTTTT')
(1.4532868652672726, 'ATTCTTTT')
(1.4519305672502316, 'AATAATTAT')
(1.449634569272538, 'GTAAATA')
(1.4472306848620522, 'CATTTTCAT')
(1.4446774195688556, 'CATATTTA')
(1.44161517176832, 'TACATTTA')
(1.4411248688661251, 'TTACTTAT')
(1.4407359026456135, 'TTATACCTA')
(1.436231096718609, 'TTCTATATT')
(1.4337571658840385, 'AACTTTA')
(1.4257389126460085, 'AAATTAT')
(1.4248293283772038, 'ACTTTATA')
(1.4231443010538083, 'TAAATATA')
(1.4170139741783623, 'TCTCCAT')
(1.4135892254630598, 'TTCTATAT')
(1.4122484245845728, 'TATTTTAG')
(1.4122051168914476, 'TATACCTA')
(1.409011341008374, 'TCATAAT')
(1.407438487265225, 'TTTAATAT')
(1.4055417303210296, 'CTATTTTC')
(1.3950892199834923, 'TATATTTTA')
(1.3936229469745323, 'CAAATATT')
(1.3865173586177173, 'ATTTTAG')
(1.3811791260471773, 'TTATATTG')
(1.3764904072197002, 'ATACCTA')
(1.3734460152393055, 'TATTCTC')
(1.3694346986070551, 'TCTTAAT')
(1.3691032015822973, 'TCTAATA')
(1.3652818424904016, 'ATTTTCC')
(1.3644402346451627, 'CTTATTTA')
(1.3643697927752965, 'TTATTTTC')
(1.3597473625237084, 'TATTTTTA')
(1.3527190732964551, 'ACTTTTAT')
(1.3444797981892331, 'TTATATG')
(1.342679995972294, 'CTTATTTTC')
(1.3400536053870642, 'TCATAATC')
(1.3382866727617988, 'TAATTTTAT')
(1.3366726088330811, 'TAATACT')
(1.3340758888922946, 'TTTAATATT')
(1.3281239590830396, 'TTCACTT')
(1.309250363864212, 'TTTTTCCA')
(1.303681278162185, 'AAATATTT')
(1.3031596766550422, 'CTTAATATG')
(1.301922310479552, 'CATAATC')
(1.28971563016108, 'TTAATATT')
(1.2804408875855422, 'TTTTTTAA')
(1.2792724973942904, 'ACTCTTT')
(1.2775025925473886, 'ATTTCTCTT')
(1.2703444513238182, 'TACTATA')
(1.2690966911141717, 'ATTATAA')
(1.266590521298797, 'TTAATATG')
(1.266590521298797, 'CTTAATAT')
(1.2665905212987967, 'AATATTAA')
(1.2658463891136704, 'ATTCTTTTT')
(1.2609546792645663, 'TAAATAAC')
(1.2515218295213115, 'AAATTAGCT')
(1.249764251831195, 'TTTCACTT')
(1.248872379835018, 'AATCTCTTA')
(1.2435807386392392, 'ATTTAGATT')
(1.2397857645941786, 'TTTCTCTT')
(1.2357783633694992, 'AATTTAAT')
(1.2334862567866551, 'CATTTATA')
(1.2333060289741966, 'TAATATG')
(1.2330969693122595, 'ATCATAT')
(1.2251285008378938, 'CTATATA')
(1.2249002090552281, 'TTTAACTT')
(1.2228474935575289, 'AAATTAGC')
(1.2228474935575286, 'ACTTAAA')
(1.2207882650936912, 'ATCTCTTA')
(1.2207882650936912, 'AATCTCTT')
(1.2195888476119192, 'TTTCACT')
(1.2191964393375017, 'TTAGCTG')
(1.218615889379218, 'ATATACT')
(1.2172845445461906, 'CTTTTTTA')
(1.2140340799445073, 'ATTTAGAT')
(1.2093520692614748, 'ACTATAA')
(1.2072910575383382, 'TCTATTTC')
(1.2029801428465965, 'TATACTTT')
(1.1993836179528352, 'AAATTAG')
(1.1983224459514195, 'TAAATTTAG')
(1.19607930542101, 'GTAGATA')
(1.1946021078021556, 'AATCTCT')
(1.1910419499578837, 'TATCTAAT')
(1.1801938319682654, 'AATTTAA')
(1.1753068233688797, 'ATCTATTT')
(1.1725435010626328, 'TAAATTTA')
(1.1663550546213604, 'AAAATTA')
(1.1614499275727452, 'TATACAT')
(1.1502162150067887, 'TAGCTGTAG')
(1.1502162150067887, 'CATTATCTT')
(1.1432142107166954, 'TTTTAATTT')
(1.1338252610739294, 'TATTTATTG')
(1.1266224486925913, 'CATTATCT')
(1.118007700795085, 'TAACTTAA')
(1.117890824822979, 'TTCATAC')
(1.115394679961173, 'TAATATTA')
(1.1045197862249616, 'CATTATC')
(1.1043965458843559, 'CATTTTTT')
(1.096995650259686, 'TATAATA')
(1.0894116528775744, 'CATATTTAT')
(1.0686574247019043, 'TCAAGTA')
(1.0677617870958296, 'TTCCATCA')
(1.059859692839371, 'TTTTCACTT')
(1.051929267065875, 'ATATTTTAG')
(1.0501098005015423, 'CTCTTAG')
(1.0418002993479414, 'TTTTACC')
(1.038765444379651, 'AAATTTC')
(1.037652425884489, 'TCCATCA')
(1.036680779880244, 'ATCATTAT')
(1.0358755093952527, 'AATAAATA')
(1.0339494359482326, 'TTTTCACT')
(1.0322607483407809, 'ACACCCTT')
(1.0309868751659743, 'ATTAAATG')
(1.0221200481830677, 'TACTCTTA')
(1.0216557573489218, 'CTATTTAA')
(1.0212781312380934, 'TTTTTTAAT')
(1.0157723046829579, 'TCATATT')
(1.0148839163681638, 'CACCCTT')
(1.013344514616693, 'TGTAGTT')
(1.0106229689546118, 'TATTTTTTA')
(1.009854546010511, 'TTTTCAC')
(1.0050378152592128, 'AAATAATAA')
(0.9904689441038732, 'ATCTTAATA')
(0.9901475429766748, 'AATAATAA')
(0.9800247926065302, 'ATAAATA')
(0.9761989958130258, 'ATCTTAAT')
(0.9625290343505166, 'ATCTTAA')
(0.9494181301155354, 'CTGTAGTT')
(0.9475869721424448, 'CCTTATT')
(0.9395518078984723, 'AATCTAA')
(0.936829161397274, 'CTGTAGT')
(0.936585811581694, 'ATTCACTGT')
(0.9156046718953134, 'TATACTTTA')
(0.9143807422384949, 'TAAACTA')
(0.9057613796010645, 'TATTCAT')
(0.9011470007084894, 'TACCTATT')
(0.8974443034102689, 'CAATAAT')
(0.8901002639309592, 'TTTAAATT')
(0.8878425961378751, 'TTGTAGAA')
(0.8868533159621106, 'ATACTTTA')
(0.8858494067807627, 'TACCTAT')
(0.8687954807643434, 'TTCTCTTA')
(0.8659762511423945, 'AATCTATTT')
(0.8645270196466935, 'TTGTAGA')
(0.8645270196466935, 'TGTAGAA')
(0.8561250312439808, 'ACATACTTA')
(0.8553158751638907, 'TACTTATA')
(0.8536211136077446, 'ATAAACT')
(0.8437013484294789, 'TTCTCCC')
(0.8393950799528416, 'TTATTTAAA')
(0.8298468902105174, 'ACTTATA')
(0.8241414793560426, 'TTCATTTTT')
(0.8171961131393106, 'TATTTAAA')
(0.8115370174712505, 'AAACTTA')
(0.8089621156603484, 'CATACTTA')
(0.8089621156603484, 'ACATACTT')
(0.8087991722402954, 'TTCATTTT')
(0.7917660344043957, 'ATTTAAA')
(0.7688229740462863, 'ACATACT')
(0.7636201125582862, 'TCAAATATT')
(0.7636201125582862, 'CAAATATTT')
(0.7140022720717423, 'TAGATTT')
(0.6227526255231792, 'TAAATAAT')
(0.5260380433799846, 'TTATTAA')
(0.5076918204004546, 'CCCTTCCTT')
(0.36102571419917084, 'TATTTATTT')
(0.07510706279800539, 'CTCCATTT')
(0.07242878156131993, 'CTCCATT')
(0.04528611674981298, 'CTTTTATTT')
(-0.040887900465535865, 'TTACTCT')
(-0.08342654380561047, 'AAATAAA')
(-0.10689690959947293, 'TTTGTTT')
(-0.12265221783370933, 'TATATTAAC')
(-0.15556749786229213, 'TGTGGCAGC')
(-0.15556749786229213, 'TGGCAGCTT')
(-0.15556749786229213, 'TCTTAATAA')
(-0.15556749786229213, 'TAAACATGT')
(-0.15556749786229213, 'GTGGCAGCT')
(-0.15556749786229213, 'GGCAGCTTT')
(-0.15556749786229213, 'GCTTTTGTT')
(-0.15556749786229213, 'GCAGCTTTT')
(-0.15556749786229213, 'CTTTTGTTT')
(-0.15556749786229213, 'CTTAATAAA')
(-0.15556749786229213, 'CATGTGGCA')
(-0.15556749786229213, 'CAGCTTTTG')
(-0.15556749786229213, 'ATGTGGCAG')
(-0.15556749786229213, 'ATAAACATG')
(-0.15556749786229213, 'AGCTTTTGT')
(-0.15556749786229213, 'ACATGTGGC')
(-0.15556749786229213, 'AACATGTGG')
(-0.15556749786229213, 'AAACATGTG')
(-0.16079030321422172, 'TTTATACCT')
(-0.16079030321422172, 'TTCTTTATA')
(-0.16079030321422172, 'TTATACCTT')
(-0.16079030321422172, 'TCTTTATAC')
(-0.16079030321422172, 'TCTAGGTAG')
(-0.16079030321422172, 'TATACCTTC')
(-0.16079030321422172, 'TAGGTAGAA')
(-0.16079030321422172, 'TAGAATTCT')
(-0.16079030321422172, 'TACCTTCTG')
(-0.16079030321422172, 'GTAGAATTC')
(-0.16079030321422172, 'GGTAGAATT')
(-0.16079030321422172, 'GAATTCTTT')
(-0.16079030321422172, 'CTTTATACC')
(-0.16079030321422172, 'CTAGGTAGA')
(-0.16079030321422172, 'ATTCTTTAT')
(-0.16079030321422172, 'ATACCTTCT')
(-0.16079030321422172, 'AGGTAGAAT')
(-0.16079030321422172, 'AGAATTCTT')
(-0.16079030321422172, 'AATTCTTTA')
(-0.16356851151219648, 'TTCCCGAGT')
(-0.16356851151219648, 'TGCTTCCCG')
(-0.16356851151219648, 'TCCCGAGTG')
(-0.16356851151219648, 'TCAGTGCTT')
(-0.16356851151219648, 'TATCAGTGC')
(-0.16356851151219648, 'GTGCTTCCC')
(-0.16356851151219648, 'GCTTCCCGA')
(-0.16356851151219648, 'GAGTGAGCA')
(-0.16356851151219648, 'CTTCCCGAG')
(-0.16356851151219648, 'CGAGTGAGC')
(-0.16356851151219648, 'CCGAGTGAG')
(-0.16356851151219648, 'CCCGAGTGA')
(-0.16356851151219648, 'CAGTGCTTC')
(-0.16356851151219648, 'ATCAGTGCT')
(-0.16356851151219648, 'AGTGCTTCC')
(-0.16356851151219648, 'AGTGAGCAT')
(-0.16380396336054043, 'TGCATCCCT')
(-0.16380396336054043, 'TGAAACATC')
(-0.16380396336054043, 'TCCCTGAAA')
(-0.16380396336054043, 'GCATCCCTG')
(-0.16380396336054043, 'GAAACATCT')
(-0.16380396336054043, 'CTGAAACAT')
(-0.16380396336054043, 'CCTGAAACA')
(-0.16380396336054043, 'CCCTGAAAC')
(-0.16380396336054043, 'CATCTCAAC')
(-0.16380396336054043, 'CATCCCTGA')
(-0.16380396336054043, 'ATCCCTGAA')
(-0.16380396336054043, 'ACATCTCAA')
(-0.16380396336054043, 'AACATCTCA')
(-0.16380396336054043, 'AAACATCTC')
(-0.1657508203832622, 'TCTTTTATT')
(-0.16611147297428394, 'TTTGGTGTG')
(-0.16611147297428394, 'TTGGTGTGG')
(-0.16611147297428394, 'TGTGGTGGT')
(-0.16611147297428394, 'TGGTGTGGT')
(-0.16611147297428394, 'TGGTGGTAT')
(-0.16611147297428394, 'GTGTGGTGG')
(-0.16611147297428394, 'GTGGTGGTA')
(-0.16611147297428394, 'GGTGTGGTG')
(-0.16611147297428394, 'CTTTGGTGT')
(-0.16611147297428394, 'CACTTTGGT')
(-0.16611147297428394, 'CAACACTTT')
(-0.16611147297428394, 'ACTTTGGTG')
(-0.16611147297428394, 'ACACTTTGG')
(-0.16611147297428394, 'ACAACACTT')
(-0.16611147297428394, 'AACACTTTG')
(-0.16611147297428394, 'AACAACACT')
(-0.16611147297428394, 'AAACAACAC')
(-0.16611147297428394, 'AAAACAACA')
(-0.16778029349907442, 'GAAAATA')
(-0.17138888468844807, 'GGAAAATA')
(-0.17138888468844807, 'GAAAATAA')
(-0.17524080124726726, 'GGAAAATAA')
(-0.17524080124726726, 'AGGAAAATA')
(-0.17733824683504573, 'AATAAAA')
(-0.17955458445459252, 'TAACACTGG')
(-0.17955458445459252, 'TAAAAGATA')
(-0.17955458445459252, 'GATAACACT')
(-0.17955458445459252, 'CATAAAAGA')
(-0.17955458445459252, 'ATAACACTG')
(-0.17955458445459252, 'ATAAAAGAT')
(-0.17955458445459252, 'AGATAACAC')
(-0.17955458445459252, 'ACATAAAAG')
(-0.17955458445459252, 'AAGATAACA')
(-0.17955458445459252, 'AACATAAAA')
(-0.17955458445459252, 'AACACTGGT')
(-0.17955458445459252, 'AAAGATAAC')
(-0.17955458445459252, 'AAAAGATAA')
(-0.18271429042112075, 'TTCTCGGAC')
(-0.18271429042112075, 'TTAGATTCT')
(-0.18271429042112075, 'TCTCGGACT')
(-0.18271429042112075, 'TCGGACTCA')
(-0.18271429042112075, 'TCAGAGTTC')
(-0.18271429042112075, 'TAGATTCTC')
(-0.18271429042112075, 'GGACTCAGA')
(-0.18271429042112075, 'GATTCTCGG')
(-0.18271429042112075, 'GACTCAGAG')
(-0.18271429042112075, 'CTCGGACTC')
(-0.18271429042112075, 'CTCAGAGTT')
(-0.18271429042112075, 'CGGACTCAG')
(-0.18271429042112075, 'CAGAGTTCT')
(-0.18271429042112075, 'ATTCTCGGA')
(-0.18271429042112075, 'AGATTCTCG')
(-0.18271429042112075, 'ACTCAGAGT')
(-0.1894512483321518, 'TTCACGGAG')
(-0.1894512483321518, 'TGCTTCACG')
(-0.1894512483321518, 'TCACGGAGG')
(-0.1894512483321518, 'GGAGGATGT')
(-0.1894512483321518, 'GCTTCACGG')
(-0.1894512483321518, 'GAGAATGCT')
(-0.1894512483321518, 'GAATGCTTC')
(-0.1894512483321518, 'CTTCACGGA')
(-0.1894512483321518, 'CGGAGGATG')
(-0.1894512483321518, 'CGAGAATGC')
(-0.1894512483321518, 'CACGGAGGA')
(-0.1894512483321518, 'ATGCTTCAC')
(-0.1894512483321518, 'AGAATGCTT')
(-0.1894512483321518, 'ACGGAGGAT')
(-0.1894512483321518, 'AATGCTTCA')
(-0.19083279258778396, 'TATTGATTT')
(-0.19083279258778396, 'TATAAACAA')
(-0.19083279258778396, 'TAAACAAGT')
(-0.19083279258778396, 'GTATTGATT')
(-0.19083279258778396, 'CAAGTATTG')
(-0.19083279258778396, 'ATTGATTTA')
(-0.19083279258778396, 'ATATAAACA')
(-0.19083279258778396, 'ATAAACAAG')
(-0.19083279258778396, 'AGTATTGAT')
(-0.19083279258778396, 'ACAAGTATT')
(-0.19083279258778396, 'AAGTATTGA')
(-0.19083279258778396, 'AACAAGTAT')
(-0.19083279258778396, 'AAACAAGTA')
(-0.20252112499810676, 'TATCTCTT')
(-0.20252112499810676, 'ATCTCTTT')
(-0.20877491279673738, 'TATCTCTTT')
(-0.2213294955441121, 'GGAGGCCCC')
(-0.2213294955441121, 'GGAAGGAGG')
(-0.2213294955441121, 'GAGGCCCCA')
(-0.2213294955441121, 'GAAGGAGGC')
(-0.2213294955441121, 'CAGTGGACT')
(-0.2213294955441121, 'AGTGGACTC')
(-0.2213294955441121, 'AGGCCCCAG')
(-0.22312370139068913, 'TTTTATCTC')
(-0.22312370139068913, 'TTTATCTCC')
(-0.22312370139068913, 'TTATCTCCA')
(-0.22312370139068913, 'TCTCCAAGT')
(-0.22312370139068913, 'TCCAAGTGA')
(-0.22312370139068913, 'TATCTCCAA')
(-0.22312370139068913, 'GATTTTTTA')
(-0.22312370139068913, 'GACAAGATT')
(-0.22312370139068913, 'CTCCAAGTG')
(-0.22312370139068913, 'CCAAGTGAA')
(-0.22312370139068913, 'CAAGATTTT')
(-0.22312370139068913, 'ATCTCCAAG')
(-0.22312370139068913, 'AGATTTTTT')
(-0.22312370139068913, 'ACAAGATTT')
(-0.22312370139068913, 'AAGATTTTT')
(-0.22647228221854182, 'CTTTGTT')
(-0.2333213118530172, 'GGAGAAA')
(-0.2333213118530172, 'GAGAAAG')
(-0.2333213118530172, 'GAAAGAT')
(-0.2333213118530172, 'AGAAAGA')
(-0.2381184297947185, 'TGGAGAAA')
(-0.2381184297947185, 'GGAGAAAG')
(-0.2381184297947185, 'GAGAAAGA')
(-0.2381184297947185, 'AGAAAGAT')
(-0.23894007555987629, 'TCCCCAA')
(-0.2432381354304553, 'TGGAGAAAG')
(-0.2432381354304553, 'GGAGAAAGA')
(-0.2432381354304553, 'GAGAAAGAT')
(-0.25923622346206326, 'TCCACAC')
(-0.25923622346206326, 'CCACACC')
(-0.25923622346206326, 'CACACCC')
(-0.26338068482279087, 'TCCACACC')
(-0.26338068482279087, 'CCACACCC')
(-0.26539433118051514, 'TGGACAC')
(-0.26539433118051514, 'CTGGACA')
(-0.2668951175017539, 'CCTTCCT')
(-0.2677313980186577, 'TCCACACCC')
(-0.2733180917337237, 'TAAAAAAAA')
(-0.2820695267354131, 'CTGGACAC')
(-0.2859465951881652, 'CCTAGAA')
(-0.28962493253999444, 'GCAGGTGG')
(-0.28962493253999444, 'CAGGTGGA')
(-0.28962493253999444, 'AGGTGGAT')
(-0.2909133420069432, 'TTGGAAA')
(-0.29494355479995993, 'TCCTAGAA')
(-0.2977348122162078, 'GCAGGTGGA')
(-0.2977348122162078, 'CAGGTGGAT')
(-0.2984241009258226, 'CACACACA')
(-0.2984241009258226, 'ACACACAC')
(-0.3121448288872435, 'TCACAGA')
(-0.3121448288872435, 'GTCACAG')
(-0.3121448288872435, 'CACAGAA')
(-0.31400439398739494, 'ACACACACA')
(-0.3203396562810843, 'TCACAGAA')
(-0.3203396562810843, 'GTCACAGA')
(-0.3228416070260455, 'AAAGATA')
(-0.3256720417205492, 'TGGATAACT')
(-0.3256720417205492, 'TAACTTAGA')
(-0.3256720417205492, 'TAACTAAGT')
(-0.3256720417205492, 'GATAACTTA')
(-0.3256720417205492, 'ATAACTTAG')
(-0.3256720417205492, 'ATAACTAAG')
(-0.3260322903076134, 'TGGGAGG')
(-0.3292300172961073, 'GTCACAGAA')
(-0.33645100316098864, 'TGGGAGGC')
(-0.3382522578301832, 'TCTCCTGGA')
(-0.3382522578301832, 'GATGAGAAC')
(-0.3382522578301832, 'GAGAACTTC')
(-0.3382522578301832, 'ATGAGAACT')
(-0.3382522578301832, 'AGAACTTCT')
(-0.3382522578301832, 'ACTTCTCCT')
(-0.34423282048096926, 'TCTCCAG')
(-0.3467961070936816, 'TGAAATGAA')
(-0.3467961070936816, 'GCTATCCAT')
(-0.3467961070936816, 'GAATGATGA')
(-0.3467961070936816, 'CCATATGAT')
(-0.3467961070936816, 'CATATGATG')
(-0.3467961070936816, 'ATGAGCTAT')
(-0.3467961070936816, 'AATGATGAG')
(-0.3467961070936816, 'AATGAATGA')
(-0.3467961070936816, 'AAATGAATG')
(-0.35220478839364966, 'GAGGCTG')
(-0.3534534628592397, 'TCTCTCCA')
(-0.3534534628592397, 'CTCTCCAG')
(-0.35604611362300664, 'TATCTCT')
(-0.35726257630656916, 'TCTGCCT')
(-0.3573314267994718, 'CTTTCTA')
(-0.3573314267994718, 'ATCTTTC')
(-0.36064313421398486, 'TGTCCTGTT')
(-0.3634627289083633, 'TCTCTCCAG')
(-0.363539908498404, 'AAAAAAAA')
(-0.36538439856588784, 'TCTGCCTG')
(-0.36538439856588784, 'CTCTGCCT')
(-0.3657134654481762, 'AGGAAAA')
(-0.37059529425883464, 'CCCTCTG')
(-0.37095991268266426, 'CTCTGCCTG')
(-0.3750604383406873, 'AGGAAAAT')
(-0.375834421966201, 'TGAGGGC')
(-0.375834421966201, 'CTGAGGG')
(-0.37707509339572226, 'TTAAAAAA')
(-0.38020909251019064, 'GCTGAGGG')
(-0.38020909251019064, 'CTGAGGGC')
(-0.3804981614018265, 'TAAAAAAT')
(-0.38143062614322, 'TTGGTAA')
(-0.38450833053243855, 'TTTCTATC')
(-0.38450833053243855, 'TTCTATCT')
(-0.38450833053243855, 'TCTTTCTA')
(-0.38450833053243855, 'TATCTTTC')
(-0.38450833053243855, 'CTTTCTAT')
(-0.38450833053243855, 'CTATCTCT')
(-0.38450833053243855, 'ATCTTTCT')
(-0.38475945910734, 'GGCTGAGGG')
(-0.38475945910734, 'GCTGAGGGC')
(-0.391769556372973, 'CTGGCCCT')
(-0.395044756165398, 'TTTCTATCT')
(-0.395044756165398, 'TTCTATCTC')
(-0.395044756165398, 'TCTTTCTAT')
(-0.395044756165398, 'TCTCTTTTA')
(-0.395044756165398, 'TCTATCTCT')
(-0.395044756165398, 'TATCTTTCT')
(-0.395044756165398, 'CTTTCTATC')
(-0.395044756165398, 'CTATCTCTT')
(-0.395044756165398, 'ATCTTTCTA')
(-0.395044756165398, 'ATCTCTTTT')
(-0.3958330938842977, 'CCCACCC')
(-0.3958330938842977, 'CCACCCC')
(-0.4023880482204839, 'GGAGGCC')
(-0.40261996945518896, 'TTAAAAAAT')
(-0.40261996945518896, 'TAAAAAATA')
(-0.4084658566630799, 'CCCTGAA')
(-0.4087528443700827, 'AGATAAT')
(-0.4092797787137094, 'ATACCTT')
(-0.41295238276639473, 'ATTGGTA')
(-0.41377043012345494, 'TCTCTGC')
(-0.41634181384986585, 'CTAAAAA')
(-0.418754202853704, 'TCCCTGAA')
(-0.41980427559402456, 'TCTCTGCC')
(-0.42205929445202284, 'CATTTCC')
(-0.42205929445202284, 'CAGCATT')
(-0.42205929445202284, 'AGCATTT')
(-0.4244837028039092, 'CCCACCCC')
(-0.42840640691858844, 'GCATTTCC')
(-0.42840640691858844, 'CAGCATTT')
(-0.42840640691858844, 'AGCATTTC')
(-0.43504876282483906, 'CAGCATTTC')
(-0.43504876282483906, 'AGCATTTCC')
(-0.43575639933025356, 'CTCTCTC')
(-0.43650588965817955, 'AATGTAT')
(-0.4402679489767848, 'ATGGAGA')
(-0.44113915288159106, 'AAGATAA')
(-0.4415751320338579, 'TGCTGGAC')
(-0.4415751320338579, 'CTGCTGGA')
(-0.4426204109743245, 'CTTTAATT')
(-0.4432202990546008, 'GTGCAGG')
(-0.4446773740396007, 'AATGCTG')
(-0.4451987594608996, 'CTCTCTCC')
(-0.44759364198878804, 'ATTCAAA')
(-0.44772595624911604, 'CTTTAATTT')
(-0.44850277834461055, 'GCCCAGCC')
(-0.44850277834461055, 'CCCAGCCC')
(-0.4491739313614167, 'GCTCCATTT')
(-0.4491739313614167, 'GACTACTAG')
(-0.44998824735540766, 'AAATGTAT')
(-0.44998824735540766, 'AAAATGTA')
(-0.45114332517622696, 'CTGCTGGAC')
(-0.45302521766852516, 'CAGTTCC')
(-0.4545635333724274, 'GAAGAAA')
(-0.4545635333724274, 'AATTGGT')
(-0.4545635333724274, 'AAGAAAT')
(-0.45814059064476187, 'CTGGCCC')
(-0.4590821241454247, 'GCCCAGG')
(-0.4609185553394433, 'GCCCAGCCC')
(-0.4609185553394433, 'CCCAGCCCT')
(-0.46113193919783374, 'TTTTAAGCC')
(-0.46113193919783374, 'TTTAAGCCA')
(-0.46113193919783374, 'TTAAGCCAA')
(-0.46113193919783374, 'TGTCTATTT')
(-0.46113193919783374, 'TAAGCCAAA')
(-0.46113193919783374, 'GTCTATTTT')
(-0.46113193919783374, 'GCCAAATAT')
(-0.46113193919783374, 'CCAAATATA')
(-0.46113193919783374, 'CAAATATAT')
(-0.46113193919783374, 'ATTTTAAGC')
(-0.46113193919783374, 'ATATTAACA')
(-0.46113193919783374, 'ATATATTAA')
(-0.46113193919783374, 'AGCCAAATA')
(-0.46113193919783374, 'AAGCCAAAT')
(-0.4625136029564772, 'TTTAATTTT')
(-0.46340101983889415, 'CCCTTGA')
(-0.46484360891028126, 'AAAATGTAT')
(-0.4648483458418282, 'AAAAAAT')
(-0.4657110893911935, 'GAAGAAAT')
(-0.46815265837365344, 'AAAAATA')
(-0.4697304366980513, 'TGCCCAGG')
(-0.4700803715299423, 'GTTTTGG')
(-0.47506696368943135, 'AGTTGCA')
(-0.47938734795152704, 'AAATGCT')
(-0.48447985547603495, 'TGACCAA')
(-0.48447985547603495, 'CTGACCA')
(-0.48447985547603495, 'CCTGACC')
(-0.48557331584074204, 'GTCCTGT')
(-0.4858897904426855, 'AGGAGGC')
(-0.48837003136691187, 'TAAATGCT')
(-0.49529662379234835, 'CTGACCAA')
(-0.49529662379234835, 'CCTGACCA')
(-0.4966951869961333, 'CCCCTTG')
(-0.5049797174737265, 'AGAATAA')
(-0.5069162876666767, 'CCTGACCAA')
(-0.5080816469186678, 'GAAGCTG')
(-0.5080816469186678, 'AGAAGCT')
(-0.5113855228332991, 'GCTGAGG')
(-0.5116103604101956, 'CCTGTCC')
(-0.5131324171291227, 'CCTGCTG')
(-0.5137810489325211, 'GGAGCTC')
(-0.5137810489325211, 'CAGGAGC')
(-0.5147406051685878, 'CCTGGAG')
(-0.5147406051685878, 'AGATCCT')
(-0.5152045646098857, 'AGAAGCTG')
(-0.5171661530692067, 'AAAAAATA')
(-0.5199319691461404, 'GGCTGAGG')
(-0.5203673870142541, 'TGGCCCT')
(-0.5212809998493549, 'TCAGGAA')
(-0.5252752124571443, 'TCCTGGAG')
(-0.5269545792295336, 'TTCCTGA')
(-0.5269545792295336, 'TCCTGAC')
(-0.5269950398943462, 'CAGGAGCT')
(-0.5269950398943462, 'AGGAGCTC')
(-0.5271789566489762, 'AGCCCTGG')
(-0.5311176905418284, 'GATTTTA')
(-0.5341388197460764, 'AAAAAAA')
(-0.5343179421198041, 'TCAGGAAG')
(-0.5355463794290298, 'CTCACCC')
(-0.5371632122466938, 'TTTGTAA')
(-0.539336194060676, 'TTCCTGAC')
(-0.539552628726855, 'CCCAGGT')
(-0.5395800075005361, 'AGATTTTA')
(-0.5413216495221579, 'CAGGAGCTC')
(-0.5417262630013723, 'AGCCCTGGG')
(-0.5424151505169776, 'GGAAAAT')
(-0.5464574718092714, 'ATAAATG')
(-0.5464574718092714, 'AAATGGA')
(-0.5471937596750311, 'TGAAAAA')
(-0.5487846005547418, 'TCCCAAG')
(-0.552057713934726, 'ATGCATA')
(-0.5546734460923197, 'TCTTTGT')
(-0.5546734460923197, 'CTCTTTG')
(-0.5546734460923197, 'CCTCTTT')
(-0.5556452349808697, 'TGAAGCC')
(-0.5556452349808697, 'CTGAAGC')
(-0.5597797120104306, 'AGGTGTG')
(-0.5607325340280557, 'CTGCACA')
(-0.5632192273221094, 'GCTGGAC')
(-0.5640394201314248, 'TCCCAAGT')
(-0.5640394201314248, 'CTCCCAAG')
(-0.5656114640282633, 'GACACAC')
(-0.5667951739689231, 'TAAAAAA')
(-0.567068307126189, 'CTGAAGCC')
(-0.5685478002695434, 'CATTTCT')
(-0.5686530537477896, 'CTCTTTGT')
(-0.5686530537477896, 'CCTCTTTG')
(-0.5703430552321833, 'TTTCAGG')
(-0.57345983436108, 'CTGCCCA')
(-0.5770880240744077, 'GCCCGGG')
(-0.5806513548217451, 'CTCCCAAGT')
(-0.5827470238683209, 'AAATGAA')
(-0.5838655128088452, 'CCTCTTTGT')
(-0.5848437277117924, 'AGGTGTGT')
(-0.5866878781988201, 'GATCCTG')
(-0.5874847245813242, 'CATTTCTA')
(-0.5878976017231927, 'GCCCTGG')
(-0.5891665372129462, 'ATCCTAG')
(-0.5898968646013618, 'TTTTTGC')
(-0.5906932668944005, 'GACACACA')
(-0.5960358368361641, 'CTGAGCA')
(-0.5969796660335602, 'AAATAAAA')
(-0.5977776456020609, 'TGTATAT')
(-0.5977776456020609, 'GTATATC')
(-0.5984433427786833, 'TTTTCAGG')
(-0.5984433427786833, 'TTTCAGGT')
(-0.6004088557313694, 'CAGTGGA')
(-0.603588690669348, 'ATCCTAGA')
(-0.6044431182738093, 'CTATCTG')
(-0.604682202740576, 'CTGGAGG')
(-0.6054123210708928, 'GTAAATG')
(-0.6056165558933413, 'GCCCTGGG')
(-0.6066936120955849, 'TGTATATC')
(-0.607896808987604, 'TGCTATA')
(-0.6085097299038494, 'ATTTTTGC')
(-0.6094490603096068, 'AGGGGCC')
(-0.6133449820532619, 'TGCCCAGC')
(-0.6153547711836063, 'TTTTCAGGT')
(-0.6181480426115399, 'ACACTCT')
(-0.6189479656371621, 'AGCCCTG')
(-0.6192273943170694, 'GGTGGGA')
(-0.6206881637436032, 'TGGAATT')
(-0.6206881637436032, 'GGAATTC')
(-0.6238351656347965, 'ATGCCAA')
(-0.6238351656347965, 'AATGCCA')
(-0.625445351991475, 'TGTTGCC')
(-0.625445351991475, 'GTTGCCC')
(-0.6255806402340547, 'AATTCAA')
(-0.626486070804513, 'AAACTGA')
(-0.6266579273380453, 'CTTTCAG')
(-0.6302113127297952, 'TGAGCAT')
(-0.6314239185114867, 'GGCTGAG')
(-0.6344390616072813, 'AAAATGT')
(-0.6355562439985438, 'AAAAATC')
(-0.6358192236870152, 'AATTCAAA')
(-0.6358240412030147, 'GCCCACC')
(-0.636159404327997, 'TGGAATTC')
(-0.6363334693104606, 'CACCCCT')
(-0.6366149545936557, 'GGGAAGA')
(-0.6366149545936557, 'GGAAGAT')
(-0.6370170818556679, 'CCACTTG')
(-0.6379721252968655, 'TGTTGCCC')
(-0.6402525201818371, 'CTTTCAGT')
(-0.642674182650699, 'GGAGAAC')
(-0.642674182650699, 'GAGAACA')
(-0.643122489516936, 'AATGCCAA')
(-0.6445016676289288, 'TGCTGGA')
(-0.6447066947289231, 'ACAGAAG')
(-0.6450027385734705, 'CCAGCCC')
(-0.6450027385734705, 'CAGCCCT')
(-0.648186805156246, 'GGGGAGC')
(-0.648568110442109, 'TGGTGGG')
(-0.648568110442109, 'ATGGTGG')
(-0.6500746877580483, 'GAAGCCT')
(-0.6500746877580483, 'CAGAAGC')
(-0.6518274684724249, 'TAAAAATC')
(-0.6548192083909686, 'TGAGCCC')
(-0.6548192083909686, 'GAGCCCT')
(-0.655099798565705, 'CCCCAAG')
(-0.656094095228391, 'GGAGAACA')
(-0.6582471456759034, 'GGGAAGAT')
(-0.6609332899856455, 'CCAGCCCT')
(-0.6627899626922069, 'CCTTTCC')
(-0.6646047523306677, 'TCCTACT')
(-0.6646047523306677, 'CCTACTA')
(-0.6653754686751481, 'GTCCCTG')
(-0.6653754686751481, 'GGCTGTT')
(-0.6653754686751481, 'GCTGTTA')
(-0.6658010366113312, 'TTTTGTA')
(-0.6667566474643675, 'TGAGCCCT')
(-0.6684325165179704, 'CTGTCCC')
(-0.6689133167759249, 'ATGGTGGG')
(-0.6691177911923728, 'CACTTTG')
(-0.6696365878673394, 'TATGAAA')
(-0.6730606666822132, 'TCCTACTA')
(-0.6760915375161753, 'CCCAAGA')
(-0.6778983049890593, 'GGCTGTTA')
(-0.6794983578636002, 'TTTTCCTA')
(-0.6835094249096447, 'GAAAGCC')
(-0.6903870828038676, 'GCCAAAT')
(-0.6930320831046572, 'CTGGAAG')
(-0.6973925771697522, 'TCTCATT')
(-0.6990043211945068, 'TTGTTTT')
(-0.6990043211945068, 'CTTGTTT')
(-0.7028529871981046, 'GGAGCCC')
(-0.7066129189873429, 'TGTCCCT')
(-0.7091004425733063, 'TTGTTCA')
(-0.7091004425733063, 'TGTTCAT')
(-0.7100193132160713, 'GCCCCAG')
(-0.7119078752555269, 'TCCCTGA')
(-0.7144246144195775, 'TGTGGAT')
(-0.7169934682158619, 'GGAGCTT')
(-0.7184683059708292, 'TCTGAAG')
(-0.7226290022255379, 'TTTTGTTC')
(-0.7226290022255379, 'TTTGTTCA')
(-0.7226290022255379, 'TTGTTCAT')
(-0.7226290022255379, 'TATTTTGT')
(-0.7226290022255379, 'ATTTTGTT')
(-0.7278569173008841, 'CTTGTTTT')
(-0.7285947102985965, 'TTGTGCA')
(-0.7288604573122206, 'GCAGGGC')
(-0.730102378023987, 'TAAATGC')
(-0.7313721082949152, 'GTCTTCC')
(-0.7344187392973465, 'CCTGACT')
(-0.7369668920559626, 'TTTTGTTCA')
(-0.7369668920559626, 'TTTGTTCAT')
(-0.7369668920559626, 'TATTTTGTT')
(-0.7369668920559626, 'ATTTTGTTC')
(-0.7389531354746988, 'AGTGGAC')
(-0.7427914194503854, 'AGATTTT')
(-0.7429873980171386, 'AACTCCA')
(-0.7429873980171386, 'AAACTCC')
(-0.7437941786668703, 'CAAGTAT')
(-0.7452365370436684, 'GGTTTTG')
(-0.7454634678929366, 'ATAACTA')
(-0.7515209818672592, 'TTCCTAG')
(-0.7518278222006413, 'CTGTTTT')
(-0.7526338665843602, 'GGGGAGG')
(-0.7539893302902253, 'AGGACAG')
(-0.7555775487968086, 'AAGATGG')
(-0.7560509317307175, 'AGTGTCC')
(-0.7567406146601521, 'CTTTGCT')
(-0.7568506041786072, 'AAACTCCA')
(-0.7578370101433486, 'TTTTCAG')
(-0.7584001621152032, 'ACTCTGA')
(-0.7650768743351699, 'AGCTGAA')
(-0.7671254734631592, 'TAATTCT')
(-0.768545945950436, 'CCTTAGG')
(-0.7722562801877819, 'GGCTTCT')
(-0.7722562801877819, 'CTGCCCC')
(-0.7724761707605478, 'CTCTGAG')
(-0.7757840937511589, 'TCCTATG')
(-0.7765478912096974, 'TGTGCAG')
(-0.7777613067671901, 'TGCCAAA')
(-0.7788660374429981, 'TGGAGAA')
(-0.7796990262794465, 'CTCCAGG')
(-0.7807679270752863, 'GGGGGTC')
(-0.782087976300171, 'TCCCTGC')
(-0.7840752953745608, 'CCAGTGT')
(-0.7840752953745608, 'CAGTGTT')
(-0.7869318672292395, 'TTGTATA')
(-0.7907628760120355, 'TGAGATT')
(-0.7964952917802517, 'CAGGGCC')
(-0.7969622240653351, 'TCCCTTC')
(-0.7974772063552655, 'TCCTAGA')
(-0.7984386525039788, 'CACACAA')
(-0.8000325113425326, 'CCTGGAA')
(-0.8029067538674117, 'CCAGTGTT')
(-0.8076689312714312, 'GTGTCCT')
(-0.8102399345711655, 'AGAAGAG')
(-0.810290580530297, 'TCAATGT')
(-0.810290580530297, 'CAATGTT')
(-0.8141518822492105, 'TTTCAGT')
(-0.8141751695751025, 'TCTTCCC')
(-0.8141751695751025, 'CTTCCCT')
(-0.8164800501043408, 'CTTCCCG')
(-0.8176715623137655, 'TCCCTTCC')
(-0.8204219777892273, 'CTCATGG')
(-0.8236452402801435, 'GTGTGTT')
(-0.8249530600766704, 'ACACACAA')
(-0.8293492901085668, 'ACCATGT')
(-0.8309083438112208, 'ATATCCC')
(-0.831353280461367, 'TCAATGTT')
(-0.8336478921864319, 'TCCTGGA')
(-0.8356121440703014, 'TCTTCCCT')
(-0.8401368356023079, 'GAGCTCC')
(-0.8433102521112921, 'AATTTGA')
(-0.8465944758752637, 'ACTGAGG')
(-0.8473868810930139, 'TATCCTA')
(-0.8534550137897843, 'GCCAGCC')
(-0.8538059431702472, 'TGTATAG')
(-0.8541586035543727, 'CTGGCTG')
(-0.8554521869222159, 'AGCCCAG')
(-0.8577503338723232, 'TTTTGTT')
(-0.8588577962144742, 'GTCAATG')
(-0.8621509118944546, 'AGGCTGC')
(-0.8639862759293343, 'CTGCCTG')
(-0.8655767252133679, 'TATAAGA')
(-0.8679462304436394, 'AGGGAGA')
(-0.8700976454681403, 'TGTTATT')
(-0.8700976454681403, 'CCCAGTT')
(-0.8700976454681403, 'ATGTTAT')
(-0.8712214913063493, 'CTATGAA')
(-0.874493327830705, 'CACCATG')
(-0.874985489778156, 'TCTCATTT')
(-0.874985489778156, 'CTCATTTT')
(-0.8757038331630236, 'TTTTTGA')
(-0.877033599170999, 'GGAGGCA')
(-0.877033599170999, 'GAGGCAT')
(-0.8798360681532693, 'TTGTATAG')
(-0.8850752770791519, 'CAAGAGA')
(-0.8850752770791519, 'AAGAGAT')
(-0.8870889067032804, 'ATGTTATT')
(-0.8893688663241064, 'TCTGCAC')
(-0.8893688663241064, 'ATCTGCA')
(-0.8942422449454237, 'CCTGGGG')
(-0.8946433778778113, 'TGTAACA')
(-0.8987499193494878, 'CATGCAT')
(-0.8991681474055019, 'GGAGGCAT')
(-0.9002072632556237, 'ATCTGCAC')
(-0.9002420165884137, 'AAATGTG')
(-0.9026566593970446, 'TCTCATTTT')
(-0.9026566593970446, 'ATCTCATTT')
(-0.9058423356558788, 'TAGGGAA')
(-0.9060037403171912, 'GACCTTG')
(-0.9132065391155393, 'ATCCTAT')
(-0.9154197216117139, 'TGCATGC')
(-0.9154197216117139, 'GCATGCA')
(-0.9154916506302788, 'GCTATAA')
(-0.9167401176634156, 'TTCCCTG')
(-0.9181535347072336, 'CCCTGGGG')
(-0.9207383874701409, 'CCCAAGT')
(-0.9235892091519933, 'CACTAAT')
(-0.9290829578158954, 'GGGAGGC')
(-0.9310346293311309, 'TTAAAAA')
(-0.9315978521477195, 'CTCTCCT')
(-0.9317412468116346, 'GCCCAGC')
(-0.9318295296465265, 'CTGAGGC')
(-0.9419759539704742, 'TGCTGTC')
(-0.9492606131373946, 'TGCATGCA')
(-0.9499512297213148, 'TAAAAAT')
(-0.9510706562141731, 'CTGCTGG')
(-0.9534738631929418, 'TCTTTCT')
(-0.9594665075414719, 'TCTCTCCT')
(-0.9623757865511261, 'CAGTTGC')
(-0.9635210652963673, 'CACTCTG')
(-0.965024764736234, 'CACCTTT')
(-0.9658343869599486, 'CCTGCCC')
(-0.9755332378580066, 'AGGAGCT')
(-0.977325706491392, 'TTTGTTC')
(-0.9822199217984362, 'TGTGCCC')
(-0.9822798752474777, 'TCTCCTG')
(-0.9852167783213883, 'ATTAACA')
(-0.9881978115243208, 'GCATTTC')
(-0.989323734951415, 'GGAAGAC')
(-1.0130401641480566, 'ACCCCTC')
(-1.014105655808241, 'AGGAAGAC')
(-1.0149332714744486, 'CTCTGCC')
(-1.0174686813006903, 'AGAAATT')
(-1.0184427853001128, 'AGCTGTT')
(-1.019597605331994, 'TCTATCT')
(-1.019597605331994, 'CTATCTC')
(-1.0228863142145816, 'TGGGGAG')
(-1.0228863142145816, 'ATGGGGA')
(-1.0305434614355349, 'TATTGTT')
(-1.0330251173198812, 'TTGGACC')
(-1.0347652667151666, 'AGGGGAG')
(-1.0365865867295834, 'GTTGTAT')
(-1.0390339445515882, 'GAGATCC')
(-1.0400749777334837, 'GACTGAG')
(-1.0449381576416534, 'ATGGGGAG')
(-1.0457564426184183, 'ACTTTAAT')
(-1.0477297484846977, 'GGTGTGT')
(-1.0506447590171775, 'AAACAGT')
(-1.0531152901037475, 'CTTTAAT')
(-1.0538743772649757, 'CCCCTGC')
(-1.054424997451593, 'CTATAAG')
(-1.056080715884321, 'TTCAGGT')
(-1.0589453503757031, 'TGCCCAG')
(-1.0649221479722106, 'TCTATCTC')
(-1.067045467471454, 'GGAGTTA')
(-1.0703808753134783, 'TTTGATG')
(-1.0724240406779635, 'TATTTTTG')
(-1.0760397633807623, 'TGTGTGC')
(-1.0836660605318607, 'TCTGTTT')
(-1.0839519486488354, 'GTTTTTG')
(-1.0898793019031132, 'ATTTGAA')
(-1.092578170382296, 'CCCTGCC')
(-1.097230210645828, 'TGTTTTC')
(-1.1035841453694968, 'CACTGTG')
(-1.1099724252919667, 'TCCCTTG')
(-1.1105312263850013, 'AATTTGAA')
(-1.1110660126734007, 'TCATGGG')
(-1.1110660126734007, 'GGGCCAT')
(-1.1241864491121776, 'ATTTTGT')
(-1.130515290969117, 'TGGACCT')
(-1.1334488907166338, 'CAGGAAG')
(-1.1560353816736597, 'ATTTTTG')
(-1.1569870650434422, 'TGCCCCC')
(-1.1586677676216037, 'CCTAGGC')
(-1.1618922309394908, 'ACTGTGT')
(-1.1649864108370835, 'CAGGGCT')
(-1.1815959719689617, 'TAGGCAA')
(-1.1815959719689617, 'CTAGGCA')
(-1.2000654925904715, 'CCCTGGG')
(-1.202748390626076, 'ACACACA')
(-1.2072910575383382, 'CTAGGCAA')
(-1.2123025894461439, 'TTTCCTA')
(-1.2228474935575286, 'AAGCTTA')
(-1.2306350798047867, 'CTGTGTG')
(-1.2453982432453758, 'TCAACAG')
(-1.2470550311199677, 'AACCTTA')
(-1.259881576697424, 'TGCAGCC')
(-1.259881576697424, 'CAGAAAT')
(-1.259881576697424, 'AACAGAA')
(-1.2758306726286888, 'TCTCTCC')
(-1.28168770761052, 'TAACCTTA')
(-1.331451093878699, 'CCATAAC')
(-1.3703647371860639, 'AGGAAGA')
202 ['TATTTAT', 'TATTTAG', 'TATTTAA', 'TATTTTT', 'TATTTTA', 'TATTACT', 'TATTATT', 'TTACTATTT', 'GCCCTGG', 'AATTTTATT', 'CATATTT', 'TTTATATAT', 'ACTTTAT', 'ACTTTTA', 'ACTTATT', 'TAGTATT', 'ACTTATTT', 'ATTATTT', 'ATTATTA', 'ATTAAAT', 'ATTAACT', 'TTTTTAA', 'TTTTTTA', 'TTTTTTT', 'TTTTAAT', 'TTTTAGT', 'TTTTCTA', 'TAATTTATT', 'TAATTTTAT', 'CATATTTAT', 'TTTTAATTT', 'TTTTAAAAT', 'AATTTATTT', 'TGCCCAG', 'CTCTGCC', 'ATTTTATT', 'ATTTTTTT', 'CTATTTAA', 'CTATTTTT', 'ACTATTT', 'TTCTTTTT', 'TTATTTAAA', 'ATTTATTG', 'ATTTATAT', 'ATTTATCT', 'ATTTAATT', 'TTACTTT', 'TTACTTA', 'TTACATT', 'TCTCTCC', 'TTATTTAA', 'TTATTTTA', 'TTATTATT', 'TTCTAAT', 'TTCTATT', 'TTCTATA', 'TTCTTTT', 'AAATTAG', 'AAATTAT', 'GCCCTGGG', 'CTGAGGC', 'ATAATTA', 'ATAATTT', 'ATAATAA', 'TACATTTA', 'TTTCATTT', 'TTTTATTT', 'TTTTAATT', 'TTTTAAAA', 'ACTCTTA', 'TTAATTTA', 'TTAATATT', 'CCATATT', 'TAAAATT', 'TAAATTA', 'TAAATAC', 'TAAATAT', 'TTAATAT', 'TTAACTT', 'TTAAATT', 'TTAAAAT', 'AGGAAGA', 'AGGAGCT', 'TATTTATA', 'TATTTATC', 'TATTTAAA', 'TATTTAAT', 'TATTTTTA', 'TATTTTTC', 'TATTTTTT', 'TATTTTAT', 'TAATCAT', 'TAATATT', 'TAATTAT', 'TAATTTA', 'CTTATAT', 'CTTATTT', 'TCTATAT', 'TCTATTT', 'TTTTTATTT', 'ACTTTATT', 'TATTATTT', 'GGAAAAT', 'CTGCCTG', 'TCTATATT', 'ACCTATT', 'ATACCTA', 'ATACTTT', 'TTTTCATT', 'GTATTTA', 'TAATATTT', 'TTTATTTCT', 'TTATACCTA', 'TTAGTAT', 'CATATTTA', 'TTTAGTAT', 'TAATTTAT', 'TTTTTCATT', 'TTATTTA', 'TTATTTT', 'TTATTAT', 'TTATATT', 'TTATAAT', 'TTTATTAT', 'TTTATTTA', 'TTTATATA', 'AGCCCTG', 'CTTTTTT', 'CTTTATT', 'TTCTATTT', 'TACTATTT', 'ATTTTCC', 'ATTTTTT', 'ATTTATT', 'ATTTATC', 'ATTTATA', 'ATTTAAT', 'ATTTAAA', 'CCTATTT', 'TTTAGTA', 'TTTAACT', 'TTTAAAA', 'TTTATTA', 'TTTATTT', 'TTTATAT', 'TTTATCT', 'ATTATATT', 'ATTATTTA', 'ATTATTTT', 'AATTATT', 'AATTTTA', 'AATTTAT', 'ATATTTAT', 'ATATTTTA', 'ATATTATT', 'CTTATTTA', 'CTTATTTT', 'AATTTTAT', 'AATTTATT', 'TATTTATTT', 'TATTTATTG', 'TATTTAATT', 'TTTTTAAA', 'TTTTTCAT', 'TTTTTTAA', 'CATTTAT', 'TTTCTCT', 'TTTCATT', 'CCTATTTT', 'TTTTCATTT', 'TATACCTA', 'TACTTAT', 'TACTTTT', 'AATAATT', 'AATATTT', 'TCATTAT', 'TCTTTTT', 'TTTAACTT', 'TTTAAAAT', 'TTTAAATT', 'TTTAATTA', 'TTTAATAT', 'TATATTG', 'TATACTT', 'TATACAT', 'CCCTGGG', 'CCCTTTT', 'TACATTT', 'GGCTGAG', 'ATTTATTTA', 'TTCACTT', 'ACATTTT', 'ACATTTA', 'ATATATA', 'ATATTTA', 'ATATTCT', 'ACTATTTA', 'TATCTTA', 'CTATATT', 'CTATTTA', 'CTATTTC', 'CTATTTT']
